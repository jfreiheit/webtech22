{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Web-Technologien \u00b6 Herzlich willkommen zur WebTech-Veranstaltung im Wintersemester 2022/23! Grober Inhalt \u00b6 In dieser Veranstaltung lernen Sie, was das World Wide Web ist und wie man eigene Webseiten und -anwendungen realisiert. Sie lernen die Protokolle und Sprachen http , HTML , CSS und JavaScript kennen und machen sich mit Angular , Node.js und REST vertraut. Zentrales Thema ist der sogenannte MEAN -Stack, d.h. Sie lernen die Entwicklung mithilfe von M ongoDB, E xpress.js, A ngular und N ode.js kennen. Nachfolgend der vorl\u00e4ufige Wochenplan (wird eventuell angepasst). Woche Themen (Vorlesung) \u00dcbung Aufgabe (Stand) Abgabe \u00dcbung bis 1. 10.-14.10.2022 Einf\u00fchrung und Organisatorisches \u00dcbung 0 - - 2. 17.-21.10.2022 HTML \u00dcbung 1 Idee 25.10.2022 3. 24.-28.10.2022 CSS (Eigenschaften und Selektoren \u00dcbung 2 - 01.11.2022 4. 31.-04.11.2022 CSS (Layout) \u00dcbung 3 Konzept 08.11.2022 5. 07.-11.11.2022 [RWD (responsive Webdesign) \u00dcbung 4 - 15.11.2022 6. 14.-18.11.2022 JavaScript (DOM) \u00dcbung 5 Datenmodell 22.11.2022 7. 21.-25.11.2022 Angular (Einf\u00fchrung und Komponenten) \u00dcbung 6 Schnittstelle 29.11.2022 8. 28.-02.12.2022 Angular (Bindings und Direktiven) + JSON \u00dcbung 7 Frontend (c+r) 06.12.2022 9. 05.-09.12.2022 Angular (Routing und Services) \u00dcbung 8 Frontend (u+d) 13.12.2022 10. 12.-16.12.2022 Node.js + Express (REST-Server + MongoDB) \u00dcbung 9 Frontend fertig 20.12.2021 11. 19.-23.12.2022 Angular (Anbindung ans Backend) \u00dcbung 10 Backend ( c ) 10.01.2023 12. 02.-06.01.2023 Nutzerverwaltung und Material - Backend (r + u) 17.01.2023 13. 09.-13.01.2023 Dateiupload + Drag&Drop - Backend (d + fertig) 24.01.2023 14. 16.-20.01.2023 Wiederholung - fertig stellen 31.01.2023 15. 23.-27.01.2023 - Fragen - - 16. 30.-02.02.2023 - Fragen - 17. 06.-10.02.2023 - Fragen Abgabe 1.PZ 20.2.2023, Gespr\u00e4che 21.2.2023 Abgabe 2.PZ 27.3.2023, Gespr\u00e4che 28.3.2023 - Organisatorisches \u00b6 Zur erfolgreichen Durchf\u00fchrung der Veranstaltung m\u00fcssen Sie die \u00dcbungen l\u00f6sen und zu den jeweiligen Fristen per Git auf einen Server (GitHub oder GitLab) laden. Am Ende des Semesters ist eine Aufgabe abzugeben. Diese Aufgabe wird bewertet. Die Bewertung entspricht dann der Modulnote. Hier sind die \u00dcbungen beschrieben, die Sie in jeder Woche ausf\u00fchren sollen. Damit Sie dies erfolgreich erledigen k\u00f6nnen, ist jeweils angegeben, welche Themen Sie daf\u00fcr durcharbeiten m\u00fcssen. Das Durcharbeiten der jeweiligen Themen entspricht jeweils einer Vorlesung. Diese wird also selbst\u00e4ndig durchgef\u00fchrt. F\u00fcr die Kommunikation untereinander verwenden wir Slack . Dort k\u00f6nnen Sie alle inhaltlichen und organisatorischen Fragen stellen. Ich f\u00e4nde es gut, wenn ich dort m\u00f6glichst wenig Fragen - zumindest die inhaltlichen - beantworten m\u00fcsste, sondern eine Art internes Diskussionsforum entsteht. Es ist sehr gew\u00fcnscht, dort Fragen zu stellen und noch mehr gew\u00fcnscht, diese von Ihnen dort beantwortet zu sehen. Damit w\u00e4re allen geholfen und ich kann besser erkennen, wo noch Nachhol- bzw. Erl\u00e4uterungsbedarf bei den meisten besteht. Semesteraufgabe \u00b6 Am Ende des Kurses geben Sie eine Webanwendung ab. Diese wird bewertet und bildet die Modulnote f\u00fcr \"WebTech\" (es gibt also keine Klausur o.\u00e4.). \u00dcberlegen Sie sich fr\u00fch, was Sie implementieren wollen. Ihrer Kreativit\u00e4t sind keine Grenzen gesetzt. Es k\u00f6nnen 2 Studentinnen gemeinsam ein Projekt durchf\u00fchren und abgeben. Sie erhalten dann (h\u00f6chstwahrscheinlich) die gleiche Note. Es muss an den Commits erkennbar sein, welchen Anteil am Ergebnis jede der beiden Studentinnen hatte. Mindestanforderungen Folgende Anforderungen werden an Ihr Projekt gestellt: das Frontend soll mit Angular entwickelt werden, das Backend mit Node.js, es soll eine Datenbank (MongoDB, kann aber auch MySQL oder PostgreSQL oder MariaDB - aber nicht Firebase) verwendet werden, es soll CRUD implementiert sein, d.h. Sie ben\u00f6tigen eine Komponente zur Erstellung und Speicherung eines Datenbankeintrages ( C reate), eine Komponente zur \u00c4nderung eines Datenbankeintrages ( U pdate), eine Komponente zur Anzeige aller Datenbankeintr\u00e4ge ( R ead), eine Komponente zum L\u00f6schen eines Datenbankeintrages ( D elete). wenn Sie die Anwendung alleine umsetzen, dann gen\u00fcgen 3 der 4 CRUD-Funktionalit\u00e4ten wenn Sie die Anwendung zu zweit entwickeln, dann sollen alle 4 CRUD-Funktionalit\u00e4ten umgesetzt werden und Login (Username + Passwort) und ich schaue mir die Commit-Hiostorie im Git genauer an, um sicherzugehen, dass beide Studentinnen gleich viel an der Anwendung mitentwickelt haben Datenbankeintr\u00e4ge k\u00f6nnen B\u00fccher, CDs, ToDos, Einkaufslisten, Vorlesungen, K\u00fchlschrankinhalte usw. sein - wie gesagt, Ihrer Kreativit\u00e4t sind keine Grenzen gesetzt. Die Anwendung soll in einem Git-Dienst (GitHub, GitLab, ...) verf\u00fcgbar sein. Verwenden Sie ein CSS-Framework, wie z.B. Materialize, Bootstrap o.\u00e4.! Ihre Anwendung soll \"modern\" aussehen und responsive sein. Erstellen Sie eine informative (ausf\u00fchrliche) README -Datei ( README.md ). Diese Datei sollte beinhalten: Eine Beschreibung Ihrer Anwendung. Am besten mit Screenshots, so dass sie Ihren Kommilitoninnen aus den n\u00e4chsten Jahren hilft, ein Verst\u00e4ndnis daf\u00fcr zu entwickeln, was m\u00f6gliche Semesteraufgaben sein k\u00f6nnen. Eine Anleitung zur Installation Ihrer Anwendung. Super w\u00e4re es, wenn Sie die Datenbank, die Sie verwenden, per Skript vorausf\u00fcllen, d.h. es w\u00e4re sch\u00f6n, wenn zum Testen der Anwendung nur das Frontend und das Backend gestartet werden m\u00fcssten und alles andere automatisch passieren w\u00fcrde. Super w\u00e4re es auch, wenn Sie Ihre Anwendung deployen w\u00fcrden. Nach Abgabe vereinbaren wir ein Online-Meeting, in dem Sie mir Ihre Anwendung nochmal zeigen k\u00f6nnen und ich Ihnen Fragen zu Ihrem Code stellen werde. Ist keine Pr\u00fcfung, sondern eher ein fachliches Gespr\u00e4ch. Abgabe- und Gespr\u00e4chstermine \u00b6 Die L\u00f6sung f\u00fcr die Semesteraufgabe pushen Sie in Ihr Respository. In einem Gespr\u00e4ch f\u00fchren Sie die L\u00f6sung vor und wir unterhalten uns \u00fcber Ihre L\u00f6sung. Daf\u00fcr stehen verschiedene Termine zur Verf\u00fcgung. Pr\u00fcfungszeitraum: 20.2. Abgabe und 21.2. Gespr\u00e4ch P\u00fcfungszeitraum: 27.3. Abgabe und 28.3. Gespr\u00e4ch Bitte tragen Sie sich in Moodle in den von Ihnen gew\u00fcnschten Gespr\u00e4chstermin ein! Wenn Sie im 1.PZ abgeben, tragen Sie sich im LSF zum ersten PZ zur Pr\u00fcfung ein, ansonsten im 2.PZ. Einige Beispiele \u00b6 Mieter- und Zahlungsinformationen verwalten \u00b6 ToDo-Liste \u00b6 Dog-O-Mat \u00b6 Reiseplaner \u00b6","title":"Home"},{"location":"#web-technologien","text":"Herzlich willkommen zur WebTech-Veranstaltung im Wintersemester 2022/23!","title":"Web-Technologien"},{"location":"#grober-inhalt","text":"In dieser Veranstaltung lernen Sie, was das World Wide Web ist und wie man eigene Webseiten und -anwendungen realisiert. Sie lernen die Protokolle und Sprachen http , HTML , CSS und JavaScript kennen und machen sich mit Angular , Node.js und REST vertraut. Zentrales Thema ist der sogenannte MEAN -Stack, d.h. Sie lernen die Entwicklung mithilfe von M ongoDB, E xpress.js, A ngular und N ode.js kennen. Nachfolgend der vorl\u00e4ufige Wochenplan (wird eventuell angepasst). Woche Themen (Vorlesung) \u00dcbung Aufgabe (Stand) Abgabe \u00dcbung bis 1. 10.-14.10.2022 Einf\u00fchrung und Organisatorisches \u00dcbung 0 - - 2. 17.-21.10.2022 HTML \u00dcbung 1 Idee 25.10.2022 3. 24.-28.10.2022 CSS (Eigenschaften und Selektoren \u00dcbung 2 - 01.11.2022 4. 31.-04.11.2022 CSS (Layout) \u00dcbung 3 Konzept 08.11.2022 5. 07.-11.11.2022 [RWD (responsive Webdesign) \u00dcbung 4 - 15.11.2022 6. 14.-18.11.2022 JavaScript (DOM) \u00dcbung 5 Datenmodell 22.11.2022 7. 21.-25.11.2022 Angular (Einf\u00fchrung und Komponenten) \u00dcbung 6 Schnittstelle 29.11.2022 8. 28.-02.12.2022 Angular (Bindings und Direktiven) + JSON \u00dcbung 7 Frontend (c+r) 06.12.2022 9. 05.-09.12.2022 Angular (Routing und Services) \u00dcbung 8 Frontend (u+d) 13.12.2022 10. 12.-16.12.2022 Node.js + Express (REST-Server + MongoDB) \u00dcbung 9 Frontend fertig 20.12.2021 11. 19.-23.12.2022 Angular (Anbindung ans Backend) \u00dcbung 10 Backend ( c ) 10.01.2023 12. 02.-06.01.2023 Nutzerverwaltung und Material - Backend (r + u) 17.01.2023 13. 09.-13.01.2023 Dateiupload + Drag&Drop - Backend (d + fertig) 24.01.2023 14. 16.-20.01.2023 Wiederholung - fertig stellen 31.01.2023 15. 23.-27.01.2023 - Fragen - - 16. 30.-02.02.2023 - Fragen - 17. 06.-10.02.2023 - Fragen Abgabe 1.PZ 20.2.2023, Gespr\u00e4che 21.2.2023 Abgabe 2.PZ 27.3.2023, Gespr\u00e4che 28.3.2023 -","title":"Grober Inhalt"},{"location":"#organisatorisches","text":"Zur erfolgreichen Durchf\u00fchrung der Veranstaltung m\u00fcssen Sie die \u00dcbungen l\u00f6sen und zu den jeweiligen Fristen per Git auf einen Server (GitHub oder GitLab) laden. Am Ende des Semesters ist eine Aufgabe abzugeben. Diese Aufgabe wird bewertet. Die Bewertung entspricht dann der Modulnote. Hier sind die \u00dcbungen beschrieben, die Sie in jeder Woche ausf\u00fchren sollen. Damit Sie dies erfolgreich erledigen k\u00f6nnen, ist jeweils angegeben, welche Themen Sie daf\u00fcr durcharbeiten m\u00fcssen. Das Durcharbeiten der jeweiligen Themen entspricht jeweils einer Vorlesung. Diese wird also selbst\u00e4ndig durchgef\u00fchrt. F\u00fcr die Kommunikation untereinander verwenden wir Slack . Dort k\u00f6nnen Sie alle inhaltlichen und organisatorischen Fragen stellen. Ich f\u00e4nde es gut, wenn ich dort m\u00f6glichst wenig Fragen - zumindest die inhaltlichen - beantworten m\u00fcsste, sondern eine Art internes Diskussionsforum entsteht. Es ist sehr gew\u00fcnscht, dort Fragen zu stellen und noch mehr gew\u00fcnscht, diese von Ihnen dort beantwortet zu sehen. Damit w\u00e4re allen geholfen und ich kann besser erkennen, wo noch Nachhol- bzw. Erl\u00e4uterungsbedarf bei den meisten besteht.","title":"Organisatorisches"},{"location":"#semesteraufgabe","text":"Am Ende des Kurses geben Sie eine Webanwendung ab. Diese wird bewertet und bildet die Modulnote f\u00fcr \"WebTech\" (es gibt also keine Klausur o.\u00e4.). \u00dcberlegen Sie sich fr\u00fch, was Sie implementieren wollen. Ihrer Kreativit\u00e4t sind keine Grenzen gesetzt. Es k\u00f6nnen 2 Studentinnen gemeinsam ein Projekt durchf\u00fchren und abgeben. Sie erhalten dann (h\u00f6chstwahrscheinlich) die gleiche Note. Es muss an den Commits erkennbar sein, welchen Anteil am Ergebnis jede der beiden Studentinnen hatte. Mindestanforderungen Folgende Anforderungen werden an Ihr Projekt gestellt: das Frontend soll mit Angular entwickelt werden, das Backend mit Node.js, es soll eine Datenbank (MongoDB, kann aber auch MySQL oder PostgreSQL oder MariaDB - aber nicht Firebase) verwendet werden, es soll CRUD implementiert sein, d.h. Sie ben\u00f6tigen eine Komponente zur Erstellung und Speicherung eines Datenbankeintrages ( C reate), eine Komponente zur \u00c4nderung eines Datenbankeintrages ( U pdate), eine Komponente zur Anzeige aller Datenbankeintr\u00e4ge ( R ead), eine Komponente zum L\u00f6schen eines Datenbankeintrages ( D elete). wenn Sie die Anwendung alleine umsetzen, dann gen\u00fcgen 3 der 4 CRUD-Funktionalit\u00e4ten wenn Sie die Anwendung zu zweit entwickeln, dann sollen alle 4 CRUD-Funktionalit\u00e4ten umgesetzt werden und Login (Username + Passwort) und ich schaue mir die Commit-Hiostorie im Git genauer an, um sicherzugehen, dass beide Studentinnen gleich viel an der Anwendung mitentwickelt haben Datenbankeintr\u00e4ge k\u00f6nnen B\u00fccher, CDs, ToDos, Einkaufslisten, Vorlesungen, K\u00fchlschrankinhalte usw. sein - wie gesagt, Ihrer Kreativit\u00e4t sind keine Grenzen gesetzt. Die Anwendung soll in einem Git-Dienst (GitHub, GitLab, ...) verf\u00fcgbar sein. Verwenden Sie ein CSS-Framework, wie z.B. Materialize, Bootstrap o.\u00e4.! Ihre Anwendung soll \"modern\" aussehen und responsive sein. Erstellen Sie eine informative (ausf\u00fchrliche) README -Datei ( README.md ). Diese Datei sollte beinhalten: Eine Beschreibung Ihrer Anwendung. Am besten mit Screenshots, so dass sie Ihren Kommilitoninnen aus den n\u00e4chsten Jahren hilft, ein Verst\u00e4ndnis daf\u00fcr zu entwickeln, was m\u00f6gliche Semesteraufgaben sein k\u00f6nnen. Eine Anleitung zur Installation Ihrer Anwendung. Super w\u00e4re es, wenn Sie die Datenbank, die Sie verwenden, per Skript vorausf\u00fcllen, d.h. es w\u00e4re sch\u00f6n, wenn zum Testen der Anwendung nur das Frontend und das Backend gestartet werden m\u00fcssten und alles andere automatisch passieren w\u00fcrde. Super w\u00e4re es auch, wenn Sie Ihre Anwendung deployen w\u00fcrden. Nach Abgabe vereinbaren wir ein Online-Meeting, in dem Sie mir Ihre Anwendung nochmal zeigen k\u00f6nnen und ich Ihnen Fragen zu Ihrem Code stellen werde. Ist keine Pr\u00fcfung, sondern eher ein fachliches Gespr\u00e4ch.","title":"Semesteraufgabe"},{"location":"#abgabe-und-gesprachstermine","text":"Die L\u00f6sung f\u00fcr die Semesteraufgabe pushen Sie in Ihr Respository. In einem Gespr\u00e4ch f\u00fchren Sie die L\u00f6sung vor und wir unterhalten uns \u00fcber Ihre L\u00f6sung. Daf\u00fcr stehen verschiedene Termine zur Verf\u00fcgung. Pr\u00fcfungszeitraum: 20.2. Abgabe und 21.2. Gespr\u00e4ch P\u00fcfungszeitraum: 27.3. Abgabe und 28.3. Gespr\u00e4ch Bitte tragen Sie sich in Moodle in den von Ihnen gew\u00fcnschten Gespr\u00e4chstermin ein! Wenn Sie im 1.PZ abgeben, tragen Sie sich im LSF zum ersten PZ zur Pr\u00fcfung ein, ansonsten im 2.PZ.","title":"Abgabe- und Gespr\u00e4chstermine"},{"location":"#einige-beispiele","text":"","title":"Einige Beispiele"},{"location":"#mieter-und-zahlungsinformationen-verwalten","text":"","title":"Mieter- und Zahlungsinformationen verwalten"},{"location":"#todo-liste","text":"","title":"ToDo-Liste"},{"location":"#dog-o-mat","text":"","title":"Dog-O-Mat"},{"location":"#reiseplaner","text":"","title":"Reiseplaner"},{"location":"einfuehrung/","text":"Webtechnologien - Einf\u00fchrung \u00b6 Als ein wesentlicher Begr\u00fcnder des World Wide Webs gilt Tim Berners Lee . Er begann 1989 mit einem Projekt, dessen Ergebnisse der erste Browser, der erste Webserver, HTTP und HTML waren. Hier werden die wesentlichen Begriffe erl\u00e4utert, die bei den Webtechnologien eine Rolle spielen. Internet \u00b6 Das Internet ist ein Netzwerk von Rechnernetzen ( Interconnected Network - InterNet ). Es handelt sich also um miteinander verbundene Rechnernetze. Das Internet ist aus dem ARPANET ( Advanced Research Projects Agency Network ) entstanden, welches Ende der 1960er Jahre am MIT und im US-Verteidigungsministerium entwickelt wurde. Die folgende Abbildung zeigt das komplette ARPANET im Jahre 1973: Die erste Daten\u00fcbertragung im ARPANET erfolgte 1969. Zwei wesentliche Konzepte wurden daf\u00fcr (im Laufe der folgenden Jahre) entwickelt: die eindeutige Adressierbarkeit der einzelnen Rechner im ARPANET/Internet und das Transportprotokolle, das die Daten\u00fcbertragung (in Datenpaketen) erm\u00f6glichte. Es entstand eine Internetprotokollfamilie: das Internet Protocol ( IP ). Internet Protocol \u00b6 Das Internet Protocol ist im OSI-Schichtenmodell die erste Schicht, die unabh\u00e4ngig vom eigentlichen \u00dcbetragungsmedium ist. Ein wesentlicher Teil der Definition des Internet Protocols nehmen die IP-Adressen ein. Die IP-Adressen des Internet Protocols Version 4 ( v4 ) bestehen aus 32 Bits und sind in 4 Bl\u00f6cke unterteilt, die durch einen Punkt getrennt sind. In Dezimaldarstellung kann jeder dieser vier Bl\u00f6cke die Werte von 0 bis 255 annehmen. Eine IP-Adresse der HTW sieht z.B. so aus: 141 .45.66.214 Die ersten drei Zahlenbl\u00f6cke bilden den Netzanteil und der letzte Zahlenblock gibt den Hostanteil an. Die Aufteilung dieser Anteile kann allerdings durch eine Subnetzmaske festgelegt bzw. ge\u00e4ndert werden. Die genannte Aufteilung gilt f\u00fcr eine Subnetzmaske 255.244.255.0 . Die Kommunikation zwischen den Teilnetzen erfolgt \u00fcber einen Router . Unter Verwendung von IPv4 lassen sich 2^32 = 256^4 = 4.294.967.296 Adressen unterscheiden. Da die Anzahl der Rechner, die mit dem Internet verbunden sind, in den vergangenen Jahren enorm gestiegen ist und weitere Ger\u00e4te (siehe Internet of Things ) hinzukommen werden, reicht dieser Adressraum nicht mehr aus und es wurde IPv6 spezifiziert, in dem 128 Bit zur Adressierung verwendet werden und somit 2^128 Adressen zur Verf\u00fcgung stehen. Das gen\u00fcgt erstmal ( Diese Anzahl reicht aus, um f\u00fcr jeden Quadratmillimeter der Erdoberfl\u00e4che mindestens 665.570.793.348.866.944 (= 6,65 \u00b7 10^17) IP-Adressen bereitzustellen Wikipedia ). Die \u00dcbertragung der Datenpakete zwischen zwei Hosts (Rechner mit jeweiliger IP-Adresse) wird auf der Transportschicht durch das Transmission Control Protocol ( TCP ) geregelt. Dabei kommunizieren die beiden sich verbindenden Rechner im Vollduplex , d.h. beide Rechner k\u00f6nnen sowohl Daten empfangen als auch senden. Die herstellung der Verbindung zwischen den beiden Rechnern erfogt \u00fcber einen Handshake . Die jeweiligen Datenpakete bestehen aus einem Header und den eigentlichen Daten . Ein Paket wird so oft gesendet, bis der Empfang best\u00e4tigt wurde. TCP wird als Transportprotokoll f\u00fcr viele Internet-Dienste verwendet, z.B. f\u00fcr WWW und f\u00fcr E-Mail. Dabei darf das Transportprotokoll (Transportschicht) nicht mit einem Protokoll der Anwendungsschicht (ist \u00fcber der Transportschicht) verwechselt werden. Das HTTP (Anwendungsschicht) nutzt TCP genauso wie SMTP. Internet-Dienste \u00b6 Das Internet (der Verbund aus Rechnernetzen) stellt zusammen mit dem Internet Protocol eine Infrastruktur f\u00fcr verschiedene Dienste zur Verf\u00fcgung. Dienste stellen M\u00f6glichkeiten dar, das Internet zu nutzen. Zu solchen Diensten geh\u00f6ren z.B. (in Klammern die verwendteen Protokolle): E-Mail ( SMTP , POP3 , IMAP ), File Transfer ( FTP ), World Wide Web ( HTTP , HTTPS ), Secure Shell ( SSH ), Namensaufl\u00f6sung ( DNS ), Internet-Telefonie (VoIP), Video-Chat, Video on Demand usw. Das WWW ist also ein Dienst f\u00fcr die Infrastruktur Internet! Die beiden Begriffe werden h\u00e4ufig f\u00e4lschlicherweise synonym verwendet. Hypertext Transfer Protocol (HTTP) \u00b6 Das Hypertext Transfer Protocol ist ein Protokoll der Anwendungsschicht, aufbauend auf das TCP der Transportschicht. Es wird verwendet, um Daten von einem Rechner (dem Webserver ) auf einen anderen Rechner (dem Client mit einem Webbrowser ) zu \u00fcbetragen (und vice versa). Es wurde von Tim Berners Lee entwickelt und nun vom World Wide Web Consortium ( W3C ) standardisiert. Es unterscheidet nur wenige Anfragemethoden (folgende Liste nicht ganz vollst\u00e4ndig): GET : fragt eine Ressource (Daten/Datei) von einem Webserver an, POST : schickt Daten vom Client an den Webserver, PUT : schickt ebenfalls Daten an den Webserver, typischerweise, um Ressourcen zu aktualisieren, DELETE : schickt Daten an den Server, um sie dort zu l\u00f6schen. Die wichtigste Anfragemethode ist GET , denn sie wird in den allermeisten F\u00e4llen verwendet, um eine Webseite von einem Webserver anzufragen. Wenn wir in die Konsole bspw. curl https://www.htw-berlin.de/ eingeben, dann erhalten wir vom Webserver der HTW die Webseite der HTW. F\u00fcr curl siehe hier . Typischerweise werden die Anfragen an den Webserver aber von einem Browser aus durchgef\u00fchrt. Das hei\u00dft, die Anfrage GET https://www.htw-berlin.de/ wird von einem Browser durchgef\u00fchrt, wenn wir in das URL-Eingabefeld https://www.htw-berlin.de/ eingeben. Das prinzipielle Szenario ist also wie folgt: Der request beginnt mit einer der obigen Anfragemethoden und der angefragten Ressource (also z.B. GET https://www.htw-berlin.de/index.html ). Die response besteht dann genau aus der angefragten Ressource ( index.html ), wenn sie existiert. Die Ressource muss nicht zwingend eine html -Seite sein, es kann sich auch um eine xml , json oder irgendein anderes Dateiformat handeln. Ein konkreter request und eine konkrete response ist im folgenden Bild zu sehen: In der response wird ein sogenannter HTTP-Statuscode mitgesendet. Die folgende Tabelle gibt einen kurzen \u00dcberblick \u00fcber diese Codes (siehe auch hier ): Methode Beschreibung 1xx Verarbeitung des Requests dauert noch an. (Seltene) R\u00fcckmeldung, um Abbruch durch Zeit\u00fcberschreitung zu verhindern. 2xx Erfolgreiche Bearbeitung der Anfrage und R\u00fcckmeldung. 200 OK 3xx Angeforderte Ressource wurde verschoben (Umleitung). 301 Moved Permanently 4xx Client-Fehler. Z.B. Request auf ein Dokument, das nicht existiert. 404 Not Found 5xx Server-Fehler. Z.B. Server kann Anfrage nicht bearbeiten. 500 Internal Server Error Ganz wichtig ist, dass das HTTProtokoll zustandslos ist. Das bedeutet, dass keine Informationen aus fr\u00fcheren Anfragen gespeichert oder anderweitig verwaltet werden. Das bedeutet aber auch, dass bspw. ein bef\u00fcllter Warenkorb durch HTTP gar nicht unterst\u00fctzt w\u00fcrde (f\u00fchere \"K\u00e4ufe\" k\u00f6nnen durch das Protokoll nicht ber\u00fccksichtigt werden). Um dieses Zustandslosigkeit zu umgehen, werden z.B. Cookies oder Session-IDs verwendet, um eine Historie der Anfragen beim Webserver erstellen und den Nutzern zuordnen zu k\u00f6nnen. HTTPS funktioniert wie HTTP, nur dass die Verbindung zwischen Browser und Webserver mittels Transport Layer Security ( TLS ) verschl\u00fcsselt wird. Ein Programm, welches das HTTProtokoll implementiert hat, ist Curl . Wenn Sie Curl installiert haben und im Terminal bspw. curl -v http://freiheit.f4.htw-berlin.de/WT/index.html eingeben ( -v steht f\u00fcr den verbose -Modus), dann erhalten Sie * Trying 141 .45.146.146... * TCP_NODELAY set * Connected to freiheit.f4.htw-berlin.de ( 141 .45.146.146 ) port 80 ( #0) > GET /WT/index.html HTTP/1.1 > Host: freiheit.f4.htw-berlin.de > User-Agent: curl/7.64.1 > Accept: */* > < HTTP/1.1 301 Moved Permanently < Date: Fri, 08 Oct 2021 06 :35:13 GMT < Server: Apache/2.4.38 ( Debian ) < Location: https://freiheit.f4.htw-berlin.de/WT/index.html < Content-Length: 346 < Content-Type: text/html ; charset = iso-8859-1 < <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\" > <html><head> <title>301 Moved Permanently</title> </head><body> <h1>Moved Permanently</h1> <p>The document has moved <a href = \"https://freiheit.f4.htw-berlin.de/WT/index.html\" >here</a>.</p> <hr> <address>Apache/2.4.38 ( Debian ) Server at freiheit.f4.htw-berlin.de Port 80 </address> </body></html> * Connection #0 to host freiheit.f4.htw-berlin.de left intact * Closing connection 0 jornfreiheit@Jorns-MBP ~ % curl -v https://freiheit.f4.htw-berlin.de/WT/index.html * Trying 141 .45.146.146... * TCP_NODELAY set * Connected to freiheit.f4.htw-berlin.de ( 141 .45.146.146 ) port 443 ( #0) * ALPN, offering h2 * ALPN, offering http/1.1 * successfully set certificate verify locations: * CAfile: /etc/ssl/cert.pem CApath: none * TLSv1.2 ( OUT ) , TLS handshake, Client hello ( 1 ) : * TLSv1.2 ( IN ) , TLS handshake, Server hello ( 2 ) : * TLSv1.2 ( IN ) , TLS handshake, Certificate ( 11 ) : * TLSv1.2 ( IN ) , TLS handshake, Server key exchange ( 12 ) : * TLSv1.2 ( IN ) , TLS handshake, Server finished ( 14 ) : * TLSv1.2 ( OUT ) , TLS handshake, Client key exchange ( 16 ) : * TLSv1.2 ( OUT ) , TLS change cipher, Change cipher spec ( 1 ) : * TLSv1.2 ( OUT ) , TLS handshake, Finished ( 20 ) : * TLSv1.2 ( IN ) , TLS change cipher, Change cipher spec ( 1 ) : * TLSv1.2 ( IN ) , TLS handshake, Finished ( 20 ) : * SSL connection using TLSv1.2 / ECDHE-RSA-AES256-GCM-SHA384 * ALPN, server accepted to use http/1.1 * Server certificate: * subject: CN = freiheit.f4.htw-berlin.de * start date: Aug 9 20 :15:57 2021 GMT * expire date: Nov 7 20 :15:55 2021 GMT * subjectAltName: host \"freiheit.f4.htw-berlin.de\" matched cert 's \"freiheit.f4.htw-berlin.de\" * issuer: C=US; O=Let' s Encrypt ; CN = R3 * SSL certificate verify ok. > GET /WT/index.html HTTP/1.1 > Host: freiheit.f4.htw-berlin.de > User-Agent: curl/7.64.1 > Accept: */* > < HTTP/1.1 200 OK < Date: Fri, 08 Oct 2021 06 :49:55 GMT < Server: Apache/2.4.38 ( Debian ) < Last-Modified: Wed, 17 Oct 2018 13 :09:16 GMT < ETag: \"f3-5786c60a5f2e6\" < Accept-Ranges: bytes < Content-Length: 243 < Vary: Accept-Encoding < Content-Type: text/html < <!DOCTYPE html> <html lang = \"de\" > <head> <meta charset = \"utf-8\" /> <meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> <title>Webtech WS 18 /19</title> </head> <body> <p>Hallo FIW!</p> </body> </html> * Connection #0 to host freiheit.f4.htw-berlin.de left intact * Closing connection 0 Sie sehen darin, dass der Webserver freiheit.f4.htw-berlin.de unter der IP 141.45.146.146 l\u00e4uft, das die Verbindung \u00fcber TLSv1.2 hergestellt wird (Port 443 und dass f\u00fcr die GET -Anfrage das HTTProtokoll in der Version 1.1 verwendet wird. Als response wird die HTML-Seite index.html zur\u00fcckgesendet. F\u00fcr Curl siehe auch hier . Uniform Resource Identifier (URI) \u00b6 Uniform Resource Identifiers sind Zeichenfolgen, die Ressourcen eindeutig beschreiben und deren Zugriff darauf. Die bekannteste Unterart von URI sind Uniform Resource Locator (URL) . H\u00e4ufig werden URL und URI synonym verwendet, was nicht ganz korrekt ist. Generell beschreiben URI : Wie kann ich auf die Ressource zugreifen (Zugriffsmethode)? Um welche Ressource handelt es sich ( URI ) bzw. wo befindet sich die Ressource im Netzwerk ( URL )? Der generelle Aufbau einer URI ist wie folgt: scheme://authority/path?query#fragment scheme kann z.B. ftp , mailto , news , file oder http sein. authority beschreibt meistens einen Host , z.B. freiheit.f4.htw-berlin.de oder freiheit.f4.htw-berlin.de:443 oder 141.45.146.146 . path beschreibt den Pfad hin zur Ressource und die Ressource selbst, z.B. WT/index.html . query ist ein (oder mehrere) Schl\u00fcssel-Werte-Paare der Form key=value . Das erste Schl\u00fcssel-Werte-Paar steht nach einem ? , jedes weitere Schl\u00fcssel-Werte-Paar steht nach einem & , z.B. ?search=webtech&id=1234 . fragment steht f\u00fcr eine bestimmte Stelle innerhalb der Ressource (z.B. ein Anker im HTML-Dokument) Ganz wichtig ist, dass URI ( URL ) keine Leerzeichen enthalten d\u00fcrfen (auch keine Umlaute! und manche Sonderzeichen, wie z.B. ? und & eine Bedeutung haben). Daraus ergibt sich, dass solche Zeichen maskiert werden. Z.B. wird ein Leerzeichen als %20 maskiert. Domain Name System (DNS) \u00b6 Das Domain Name System (DNS) ist f\u00fcr die Aufl\u00f6sung von Namen nach IP-Adressen zust\u00e4ndig. Wenn wir bspw. in den Browser https://freiheit.f4.htw-berlin.de eingeben, dann wird eine GET -Anfrage an den Webserver mit dem Namen freiheit.f4.htw-berlin.de gestellt. Da die Kommunikation unter den Rechnern im Internet jedoch \u00fcber IP-Adressen erfolgt und nicht \u00fcber Namen, muss dieser Namen \"aufgel\u00f6st\" werden. Das \u00fcbernimmt das DNS. Es ermittelt f\u00fcr diesen Webserver die IP 141.45.146.146 . Das DNS funktioniert also wie eine Telefonauskunft, f\u00fcr einen konkreten Namen wird eine eindeutige IP ermittelt. Das DNS besteht aus sehr vielen Servern, die jeweils unabh\u00e4ngig voneinander (dezentral) arbeiten und die eine hierarchische Struktur des Namensraumes abbilden. F\u00fcr den Fall freiheit.f4.htw-berlin.de bedeutet das, dass zuerst die Server ( Root-Server ) angesprochen werden, die die Top-level-Domain de verwalten. Von diesen Servern wird man an die Server weitergelietet, die den Namensraum htw-berlin verwalten und so weiter bis die IP-Adresse vollst\u00e4ndig ermittelt und aufgel\u00f6st werden kann. Verfolgen l\u00e4sst sich diese Aufl\u00f6sung bspw. mithilfe des dig -Kommandos: dig +trace +additional -t A freiheit.f4.htw-berlin.de Dieses Kommande erzeugt z.B. folgende Ausgabe (gek\u00fcrzt): ; <<>> DiG 9 .10.6 <<>> +trace +additional -t A freiheit.f4.htw-berlin.de ;; global options: +cmd . 79476 IN NS d.root-servers.net. . 79476 IN NS f.root-servers.net. . 79476 IN NS c.root-servers.net. . 79476 IN NS k.root-servers.net. . 79476 IN NS i.root-servers.net. . 79476 IN NS g.root-servers.net. . 79476 IN NS h.root-servers.net. . 79476 IN NS j.root-servers.net. . 79476 IN NS b.root-servers.net. . 79476 IN NS a.root-servers.net. . 79476 IN NS e.root-servers.net. . 79476 IN NS l.root-servers.net. . 79476 IN NS m.root-servers.net. . 79476 IN RRSIG NS 8 0 518400 20211021050000 20211008040000 14748 . ;; Received 525 bytes from 192 .168.178.1#53 ( 192 .168.178.1 ) in 11 ms de. 172800 IN NS s.de.net. de. 172800 IN NS n.de.net. de. 172800 IN NS a.nic.de. de. 172800 IN NS f.nic.de. de. 172800 IN NS l.de.net. de. 172800 IN NS z.nic.de. de. 86400 IN DS 26755 8 2 F341357809A5954311CCB82ADE114C6C1D724A75C0395137AA397803 5425E78D de. 86400 IN RRSIG DS 8 1 86400 20211021050000 20211008040000 14748 . s.de.net. 172800 IN A 195 .243.137.26 s.de.net. 172800 IN AAAA 2003 :8:14::53 n.de.net. 172800 IN A 194 .146.107.6 n.de.net. 172800 IN AAAA 2001 :67c:1011:1::53 a.nic.de. 172800 IN A 194 .0.0.53 a.nic.de. 172800 IN AAAA 2001 :678:2::53 f.nic.de. 172800 IN A 81 .91.164.5 f.nic.de. 172800 IN AAAA 2a02:568:0:2::53 l.de.net. 172800 IN A 77 .67.63.105 l.de.net. 172800 IN AAAA 2001 :668:1f:11::105 z.nic.de. 172800 IN A 194 .246.96.1 z.nic.de. 172800 IN AAAA 2a02:568:fe02::de ;; Received 759 bytes from 198 .41.0.4#53 ( a.root-servers.net ) in 25 ms htw-berlin.de. 86400 IN NS dns-2.dfn.de. htw-berlin.de. 86400 IN NS infobloxv.htw-berlin.de. tjlb7qbojvmlf1s6gdriru7vsms1lg16.de. 7200 IN NSEC3 1 1 15 CA12B74ADB90591A TJLFG48H vkljn0takntiv7s3te6vlcveecv4kj34.de. 7200 IN NSEC3 1 1 15 CA12B74ADB90591A VKLN0C6F tjlb7qbojvmlf1s6gdriru7vsms1lg16.de. 7200 IN RRSIG NSEC3 8 2 7200 20211017040550 20211003023550 54729 de. vkljn0takntiv7s3te6vlcveecv4kj34.de. 7200 IN RRSIG NSEC3 8 2 7200 20211018032318 20211004015318 54729 de. infobloxv.htw-berlin.de. 86400 IN A 141 .45.65.100 ;; Received 628 bytes from 2003 :8:14::53#53 ( s.de.net ) in 17 ms freiheit.f4.htw-berlin.de. 28800 IN A 141 .45.146.146 ;; Received 70 bytes from 141 .45.65.100#53 ( infobloxv.htw-berlin.de ) in 35 ms Zuerst erfolgt die Abfrage \u00fcber die Root-Server und einige Weiterleitungsserver bis der Name vom DNS-Server der HTW infobloxv.htw-berlin.de (IP-Adresse 141.45.65.100 ) schlussendlich aufgel\u00f6st wird. Man sieht auch, dass die Anfragen an die DNS-Server \u00fcber den Port 53 gesendet werden. World Wide Web (WWW) \u00b6 Die Grundidee von Webservern ist es, HTML-Dokumente zum Lesen zur Verf\u00fcgung zu stellen. HTML steht f\u00fcr Hypertext Markup Language . Dabei steht Hypertext f\u00fcr die Idee, in den Textdokumenten Hyperlinks auf andere Textdokumente (die auf dem gleichen oder anderen Webservern liegen) zu definieren. Ein Klick auf diese Hyperlinks liest die Dokumente vom Webserver und \u00f6ffnet sie im Browser. Stellt man alle diese Dokumente als Knoten dar und fasst man die Hyperlinks als eine Verbindung zwischen diesen Dokumenten (Knoten) auf, so entsteht das Bild eines Netzes ( Web ). Da es Webserver auf der ganzen Welt umspannt, wird vom World Wide Web gesprochen. Das WWW ist also ein \u00fcber das Internet aufrufbares Hypertext-System aus lauter Webseiten. Heute spricht man eher von Hypermedien als von Hypertexten. Es ist eines von vielen Diensten des Internets. Tim Berners Lee \u00b6 Es ist beeindruckend, wie viele der Webtechnologien erstmalig von Tim Berners Lee umgesetzt wurden. Er entwickelte HTML HTTP URL den ersten Webbrowser ( WorldWideWeb ) und den ersten Webserver ( CERN httpd ) Keine dieser Entwicklungen wurden patentiert und konnten somit kostenfrei von allen genutzt werden, was der schnellen Verbreitung dieser Technologien diente. 1994 gr\u00fcndete er das World Wide Web Consortium (W3C), welches sich um die Standadisierung dieser und weiterer Webtechnologien k\u00fcmmert, siehe w3.org .","title":"Einf\u00fchrung"},{"location":"einfuehrung/#webtechnologien-einfuhrung","text":"Als ein wesentlicher Begr\u00fcnder des World Wide Webs gilt Tim Berners Lee . Er begann 1989 mit einem Projekt, dessen Ergebnisse der erste Browser, der erste Webserver, HTTP und HTML waren. Hier werden die wesentlichen Begriffe erl\u00e4utert, die bei den Webtechnologien eine Rolle spielen.","title":"Webtechnologien - Einf\u00fchrung"},{"location":"einfuehrung/#internet","text":"Das Internet ist ein Netzwerk von Rechnernetzen ( Interconnected Network - InterNet ). Es handelt sich also um miteinander verbundene Rechnernetze. Das Internet ist aus dem ARPANET ( Advanced Research Projects Agency Network ) entstanden, welches Ende der 1960er Jahre am MIT und im US-Verteidigungsministerium entwickelt wurde. Die folgende Abbildung zeigt das komplette ARPANET im Jahre 1973: Die erste Daten\u00fcbertragung im ARPANET erfolgte 1969. Zwei wesentliche Konzepte wurden daf\u00fcr (im Laufe der folgenden Jahre) entwickelt: die eindeutige Adressierbarkeit der einzelnen Rechner im ARPANET/Internet und das Transportprotokolle, das die Daten\u00fcbertragung (in Datenpaketen) erm\u00f6glichte. Es entstand eine Internetprotokollfamilie: das Internet Protocol ( IP ).","title":"Internet"},{"location":"einfuehrung/#internet-protocol","text":"Das Internet Protocol ist im OSI-Schichtenmodell die erste Schicht, die unabh\u00e4ngig vom eigentlichen \u00dcbetragungsmedium ist. Ein wesentlicher Teil der Definition des Internet Protocols nehmen die IP-Adressen ein. Die IP-Adressen des Internet Protocols Version 4 ( v4 ) bestehen aus 32 Bits und sind in 4 Bl\u00f6cke unterteilt, die durch einen Punkt getrennt sind. In Dezimaldarstellung kann jeder dieser vier Bl\u00f6cke die Werte von 0 bis 255 annehmen. Eine IP-Adresse der HTW sieht z.B. so aus: 141 .45.66.214 Die ersten drei Zahlenbl\u00f6cke bilden den Netzanteil und der letzte Zahlenblock gibt den Hostanteil an. Die Aufteilung dieser Anteile kann allerdings durch eine Subnetzmaske festgelegt bzw. ge\u00e4ndert werden. Die genannte Aufteilung gilt f\u00fcr eine Subnetzmaske 255.244.255.0 . Die Kommunikation zwischen den Teilnetzen erfolgt \u00fcber einen Router . Unter Verwendung von IPv4 lassen sich 2^32 = 256^4 = 4.294.967.296 Adressen unterscheiden. Da die Anzahl der Rechner, die mit dem Internet verbunden sind, in den vergangenen Jahren enorm gestiegen ist und weitere Ger\u00e4te (siehe Internet of Things ) hinzukommen werden, reicht dieser Adressraum nicht mehr aus und es wurde IPv6 spezifiziert, in dem 128 Bit zur Adressierung verwendet werden und somit 2^128 Adressen zur Verf\u00fcgung stehen. Das gen\u00fcgt erstmal ( Diese Anzahl reicht aus, um f\u00fcr jeden Quadratmillimeter der Erdoberfl\u00e4che mindestens 665.570.793.348.866.944 (= 6,65 \u00b7 10^17) IP-Adressen bereitzustellen Wikipedia ). Die \u00dcbertragung der Datenpakete zwischen zwei Hosts (Rechner mit jeweiliger IP-Adresse) wird auf der Transportschicht durch das Transmission Control Protocol ( TCP ) geregelt. Dabei kommunizieren die beiden sich verbindenden Rechner im Vollduplex , d.h. beide Rechner k\u00f6nnen sowohl Daten empfangen als auch senden. Die herstellung der Verbindung zwischen den beiden Rechnern erfogt \u00fcber einen Handshake . Die jeweiligen Datenpakete bestehen aus einem Header und den eigentlichen Daten . Ein Paket wird so oft gesendet, bis der Empfang best\u00e4tigt wurde. TCP wird als Transportprotokoll f\u00fcr viele Internet-Dienste verwendet, z.B. f\u00fcr WWW und f\u00fcr E-Mail. Dabei darf das Transportprotokoll (Transportschicht) nicht mit einem Protokoll der Anwendungsschicht (ist \u00fcber der Transportschicht) verwechselt werden. Das HTTP (Anwendungsschicht) nutzt TCP genauso wie SMTP.","title":"Internet Protocol"},{"location":"einfuehrung/#internet-dienste","text":"Das Internet (der Verbund aus Rechnernetzen) stellt zusammen mit dem Internet Protocol eine Infrastruktur f\u00fcr verschiedene Dienste zur Verf\u00fcgung. Dienste stellen M\u00f6glichkeiten dar, das Internet zu nutzen. Zu solchen Diensten geh\u00f6ren z.B. (in Klammern die verwendteen Protokolle): E-Mail ( SMTP , POP3 , IMAP ), File Transfer ( FTP ), World Wide Web ( HTTP , HTTPS ), Secure Shell ( SSH ), Namensaufl\u00f6sung ( DNS ), Internet-Telefonie (VoIP), Video-Chat, Video on Demand usw. Das WWW ist also ein Dienst f\u00fcr die Infrastruktur Internet! Die beiden Begriffe werden h\u00e4ufig f\u00e4lschlicherweise synonym verwendet.","title":"Internet-Dienste"},{"location":"einfuehrung/#hypertext-transfer-protocol-http","text":"Das Hypertext Transfer Protocol ist ein Protokoll der Anwendungsschicht, aufbauend auf das TCP der Transportschicht. Es wird verwendet, um Daten von einem Rechner (dem Webserver ) auf einen anderen Rechner (dem Client mit einem Webbrowser ) zu \u00fcbetragen (und vice versa). Es wurde von Tim Berners Lee entwickelt und nun vom World Wide Web Consortium ( W3C ) standardisiert. Es unterscheidet nur wenige Anfragemethoden (folgende Liste nicht ganz vollst\u00e4ndig): GET : fragt eine Ressource (Daten/Datei) von einem Webserver an, POST : schickt Daten vom Client an den Webserver, PUT : schickt ebenfalls Daten an den Webserver, typischerweise, um Ressourcen zu aktualisieren, DELETE : schickt Daten an den Server, um sie dort zu l\u00f6schen. Die wichtigste Anfragemethode ist GET , denn sie wird in den allermeisten F\u00e4llen verwendet, um eine Webseite von einem Webserver anzufragen. Wenn wir in die Konsole bspw. curl https://www.htw-berlin.de/ eingeben, dann erhalten wir vom Webserver der HTW die Webseite der HTW. F\u00fcr curl siehe hier . Typischerweise werden die Anfragen an den Webserver aber von einem Browser aus durchgef\u00fchrt. Das hei\u00dft, die Anfrage GET https://www.htw-berlin.de/ wird von einem Browser durchgef\u00fchrt, wenn wir in das URL-Eingabefeld https://www.htw-berlin.de/ eingeben. Das prinzipielle Szenario ist also wie folgt: Der request beginnt mit einer der obigen Anfragemethoden und der angefragten Ressource (also z.B. GET https://www.htw-berlin.de/index.html ). Die response besteht dann genau aus der angefragten Ressource ( index.html ), wenn sie existiert. Die Ressource muss nicht zwingend eine html -Seite sein, es kann sich auch um eine xml , json oder irgendein anderes Dateiformat handeln. Ein konkreter request und eine konkrete response ist im folgenden Bild zu sehen: In der response wird ein sogenannter HTTP-Statuscode mitgesendet. Die folgende Tabelle gibt einen kurzen \u00dcberblick \u00fcber diese Codes (siehe auch hier ): Methode Beschreibung 1xx Verarbeitung des Requests dauert noch an. (Seltene) R\u00fcckmeldung, um Abbruch durch Zeit\u00fcberschreitung zu verhindern. 2xx Erfolgreiche Bearbeitung der Anfrage und R\u00fcckmeldung. 200 OK 3xx Angeforderte Ressource wurde verschoben (Umleitung). 301 Moved Permanently 4xx Client-Fehler. Z.B. Request auf ein Dokument, das nicht existiert. 404 Not Found 5xx Server-Fehler. Z.B. Server kann Anfrage nicht bearbeiten. 500 Internal Server Error Ganz wichtig ist, dass das HTTProtokoll zustandslos ist. Das bedeutet, dass keine Informationen aus fr\u00fcheren Anfragen gespeichert oder anderweitig verwaltet werden. Das bedeutet aber auch, dass bspw. ein bef\u00fcllter Warenkorb durch HTTP gar nicht unterst\u00fctzt w\u00fcrde (f\u00fchere \"K\u00e4ufe\" k\u00f6nnen durch das Protokoll nicht ber\u00fccksichtigt werden). Um dieses Zustandslosigkeit zu umgehen, werden z.B. Cookies oder Session-IDs verwendet, um eine Historie der Anfragen beim Webserver erstellen und den Nutzern zuordnen zu k\u00f6nnen. HTTPS funktioniert wie HTTP, nur dass die Verbindung zwischen Browser und Webserver mittels Transport Layer Security ( TLS ) verschl\u00fcsselt wird. Ein Programm, welches das HTTProtokoll implementiert hat, ist Curl . Wenn Sie Curl installiert haben und im Terminal bspw. curl -v http://freiheit.f4.htw-berlin.de/WT/index.html eingeben ( -v steht f\u00fcr den verbose -Modus), dann erhalten Sie * Trying 141 .45.146.146... * TCP_NODELAY set * Connected to freiheit.f4.htw-berlin.de ( 141 .45.146.146 ) port 80 ( #0) > GET /WT/index.html HTTP/1.1 > Host: freiheit.f4.htw-berlin.de > User-Agent: curl/7.64.1 > Accept: */* > < HTTP/1.1 301 Moved Permanently < Date: Fri, 08 Oct 2021 06 :35:13 GMT < Server: Apache/2.4.38 ( Debian ) < Location: https://freiheit.f4.htw-berlin.de/WT/index.html < Content-Length: 346 < Content-Type: text/html ; charset = iso-8859-1 < <!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML 2.0//EN\" > <html><head> <title>301 Moved Permanently</title> </head><body> <h1>Moved Permanently</h1> <p>The document has moved <a href = \"https://freiheit.f4.htw-berlin.de/WT/index.html\" >here</a>.</p> <hr> <address>Apache/2.4.38 ( Debian ) Server at freiheit.f4.htw-berlin.de Port 80 </address> </body></html> * Connection #0 to host freiheit.f4.htw-berlin.de left intact * Closing connection 0 jornfreiheit@Jorns-MBP ~ % curl -v https://freiheit.f4.htw-berlin.de/WT/index.html * Trying 141 .45.146.146... * TCP_NODELAY set * Connected to freiheit.f4.htw-berlin.de ( 141 .45.146.146 ) port 443 ( #0) * ALPN, offering h2 * ALPN, offering http/1.1 * successfully set certificate verify locations: * CAfile: /etc/ssl/cert.pem CApath: none * TLSv1.2 ( OUT ) , TLS handshake, Client hello ( 1 ) : * TLSv1.2 ( IN ) , TLS handshake, Server hello ( 2 ) : * TLSv1.2 ( IN ) , TLS handshake, Certificate ( 11 ) : * TLSv1.2 ( IN ) , TLS handshake, Server key exchange ( 12 ) : * TLSv1.2 ( IN ) , TLS handshake, Server finished ( 14 ) : * TLSv1.2 ( OUT ) , TLS handshake, Client key exchange ( 16 ) : * TLSv1.2 ( OUT ) , TLS change cipher, Change cipher spec ( 1 ) : * TLSv1.2 ( OUT ) , TLS handshake, Finished ( 20 ) : * TLSv1.2 ( IN ) , TLS change cipher, Change cipher spec ( 1 ) : * TLSv1.2 ( IN ) , TLS handshake, Finished ( 20 ) : * SSL connection using TLSv1.2 / ECDHE-RSA-AES256-GCM-SHA384 * ALPN, server accepted to use http/1.1 * Server certificate: * subject: CN = freiheit.f4.htw-berlin.de * start date: Aug 9 20 :15:57 2021 GMT * expire date: Nov 7 20 :15:55 2021 GMT * subjectAltName: host \"freiheit.f4.htw-berlin.de\" matched cert 's \"freiheit.f4.htw-berlin.de\" * issuer: C=US; O=Let' s Encrypt ; CN = R3 * SSL certificate verify ok. > GET /WT/index.html HTTP/1.1 > Host: freiheit.f4.htw-berlin.de > User-Agent: curl/7.64.1 > Accept: */* > < HTTP/1.1 200 OK < Date: Fri, 08 Oct 2021 06 :49:55 GMT < Server: Apache/2.4.38 ( Debian ) < Last-Modified: Wed, 17 Oct 2018 13 :09:16 GMT < ETag: \"f3-5786c60a5f2e6\" < Accept-Ranges: bytes < Content-Length: 243 < Vary: Accept-Encoding < Content-Type: text/html < <!DOCTYPE html> <html lang = \"de\" > <head> <meta charset = \"utf-8\" /> <meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" /> <title>Webtech WS 18 /19</title> </head> <body> <p>Hallo FIW!</p> </body> </html> * Connection #0 to host freiheit.f4.htw-berlin.de left intact * Closing connection 0 Sie sehen darin, dass der Webserver freiheit.f4.htw-berlin.de unter der IP 141.45.146.146 l\u00e4uft, das die Verbindung \u00fcber TLSv1.2 hergestellt wird (Port 443 und dass f\u00fcr die GET -Anfrage das HTTProtokoll in der Version 1.1 verwendet wird. Als response wird die HTML-Seite index.html zur\u00fcckgesendet. F\u00fcr Curl siehe auch hier .","title":"Hypertext Transfer Protocol (HTTP)"},{"location":"einfuehrung/#uniform-resource-identifier-uri","text":"Uniform Resource Identifiers sind Zeichenfolgen, die Ressourcen eindeutig beschreiben und deren Zugriff darauf. Die bekannteste Unterart von URI sind Uniform Resource Locator (URL) . H\u00e4ufig werden URL und URI synonym verwendet, was nicht ganz korrekt ist. Generell beschreiben URI : Wie kann ich auf die Ressource zugreifen (Zugriffsmethode)? Um welche Ressource handelt es sich ( URI ) bzw. wo befindet sich die Ressource im Netzwerk ( URL )? Der generelle Aufbau einer URI ist wie folgt: scheme://authority/path?query#fragment scheme kann z.B. ftp , mailto , news , file oder http sein. authority beschreibt meistens einen Host , z.B. freiheit.f4.htw-berlin.de oder freiheit.f4.htw-berlin.de:443 oder 141.45.146.146 . path beschreibt den Pfad hin zur Ressource und die Ressource selbst, z.B. WT/index.html . query ist ein (oder mehrere) Schl\u00fcssel-Werte-Paare der Form key=value . Das erste Schl\u00fcssel-Werte-Paar steht nach einem ? , jedes weitere Schl\u00fcssel-Werte-Paar steht nach einem & , z.B. ?search=webtech&id=1234 . fragment steht f\u00fcr eine bestimmte Stelle innerhalb der Ressource (z.B. ein Anker im HTML-Dokument) Ganz wichtig ist, dass URI ( URL ) keine Leerzeichen enthalten d\u00fcrfen (auch keine Umlaute! und manche Sonderzeichen, wie z.B. ? und & eine Bedeutung haben). Daraus ergibt sich, dass solche Zeichen maskiert werden. Z.B. wird ein Leerzeichen als %20 maskiert.","title":"Uniform Resource Identifier (URI)"},{"location":"einfuehrung/#domain-name-system-dns","text":"Das Domain Name System (DNS) ist f\u00fcr die Aufl\u00f6sung von Namen nach IP-Adressen zust\u00e4ndig. Wenn wir bspw. in den Browser https://freiheit.f4.htw-berlin.de eingeben, dann wird eine GET -Anfrage an den Webserver mit dem Namen freiheit.f4.htw-berlin.de gestellt. Da die Kommunikation unter den Rechnern im Internet jedoch \u00fcber IP-Adressen erfolgt und nicht \u00fcber Namen, muss dieser Namen \"aufgel\u00f6st\" werden. Das \u00fcbernimmt das DNS. Es ermittelt f\u00fcr diesen Webserver die IP 141.45.146.146 . Das DNS funktioniert also wie eine Telefonauskunft, f\u00fcr einen konkreten Namen wird eine eindeutige IP ermittelt. Das DNS besteht aus sehr vielen Servern, die jeweils unabh\u00e4ngig voneinander (dezentral) arbeiten und die eine hierarchische Struktur des Namensraumes abbilden. F\u00fcr den Fall freiheit.f4.htw-berlin.de bedeutet das, dass zuerst die Server ( Root-Server ) angesprochen werden, die die Top-level-Domain de verwalten. Von diesen Servern wird man an die Server weitergelietet, die den Namensraum htw-berlin verwalten und so weiter bis die IP-Adresse vollst\u00e4ndig ermittelt und aufgel\u00f6st werden kann. Verfolgen l\u00e4sst sich diese Aufl\u00f6sung bspw. mithilfe des dig -Kommandos: dig +trace +additional -t A freiheit.f4.htw-berlin.de Dieses Kommande erzeugt z.B. folgende Ausgabe (gek\u00fcrzt): ; <<>> DiG 9 .10.6 <<>> +trace +additional -t A freiheit.f4.htw-berlin.de ;; global options: +cmd . 79476 IN NS d.root-servers.net. . 79476 IN NS f.root-servers.net. . 79476 IN NS c.root-servers.net. . 79476 IN NS k.root-servers.net. . 79476 IN NS i.root-servers.net. . 79476 IN NS g.root-servers.net. . 79476 IN NS h.root-servers.net. . 79476 IN NS j.root-servers.net. . 79476 IN NS b.root-servers.net. . 79476 IN NS a.root-servers.net. . 79476 IN NS e.root-servers.net. . 79476 IN NS l.root-servers.net. . 79476 IN NS m.root-servers.net. . 79476 IN RRSIG NS 8 0 518400 20211021050000 20211008040000 14748 . ;; Received 525 bytes from 192 .168.178.1#53 ( 192 .168.178.1 ) in 11 ms de. 172800 IN NS s.de.net. de. 172800 IN NS n.de.net. de. 172800 IN NS a.nic.de. de. 172800 IN NS f.nic.de. de. 172800 IN NS l.de.net. de. 172800 IN NS z.nic.de. de. 86400 IN DS 26755 8 2 F341357809A5954311CCB82ADE114C6C1D724A75C0395137AA397803 5425E78D de. 86400 IN RRSIG DS 8 1 86400 20211021050000 20211008040000 14748 . s.de.net. 172800 IN A 195 .243.137.26 s.de.net. 172800 IN AAAA 2003 :8:14::53 n.de.net. 172800 IN A 194 .146.107.6 n.de.net. 172800 IN AAAA 2001 :67c:1011:1::53 a.nic.de. 172800 IN A 194 .0.0.53 a.nic.de. 172800 IN AAAA 2001 :678:2::53 f.nic.de. 172800 IN A 81 .91.164.5 f.nic.de. 172800 IN AAAA 2a02:568:0:2::53 l.de.net. 172800 IN A 77 .67.63.105 l.de.net. 172800 IN AAAA 2001 :668:1f:11::105 z.nic.de. 172800 IN A 194 .246.96.1 z.nic.de. 172800 IN AAAA 2a02:568:fe02::de ;; Received 759 bytes from 198 .41.0.4#53 ( a.root-servers.net ) in 25 ms htw-berlin.de. 86400 IN NS dns-2.dfn.de. htw-berlin.de. 86400 IN NS infobloxv.htw-berlin.de. tjlb7qbojvmlf1s6gdriru7vsms1lg16.de. 7200 IN NSEC3 1 1 15 CA12B74ADB90591A TJLFG48H vkljn0takntiv7s3te6vlcveecv4kj34.de. 7200 IN NSEC3 1 1 15 CA12B74ADB90591A VKLN0C6F tjlb7qbojvmlf1s6gdriru7vsms1lg16.de. 7200 IN RRSIG NSEC3 8 2 7200 20211017040550 20211003023550 54729 de. vkljn0takntiv7s3te6vlcveecv4kj34.de. 7200 IN RRSIG NSEC3 8 2 7200 20211018032318 20211004015318 54729 de. infobloxv.htw-berlin.de. 86400 IN A 141 .45.65.100 ;; Received 628 bytes from 2003 :8:14::53#53 ( s.de.net ) in 17 ms freiheit.f4.htw-berlin.de. 28800 IN A 141 .45.146.146 ;; Received 70 bytes from 141 .45.65.100#53 ( infobloxv.htw-berlin.de ) in 35 ms Zuerst erfolgt die Abfrage \u00fcber die Root-Server und einige Weiterleitungsserver bis der Name vom DNS-Server der HTW infobloxv.htw-berlin.de (IP-Adresse 141.45.65.100 ) schlussendlich aufgel\u00f6st wird. Man sieht auch, dass die Anfragen an die DNS-Server \u00fcber den Port 53 gesendet werden.","title":"Domain Name System (DNS)"},{"location":"einfuehrung/#world-wide-web-www","text":"Die Grundidee von Webservern ist es, HTML-Dokumente zum Lesen zur Verf\u00fcgung zu stellen. HTML steht f\u00fcr Hypertext Markup Language . Dabei steht Hypertext f\u00fcr die Idee, in den Textdokumenten Hyperlinks auf andere Textdokumente (die auf dem gleichen oder anderen Webservern liegen) zu definieren. Ein Klick auf diese Hyperlinks liest die Dokumente vom Webserver und \u00f6ffnet sie im Browser. Stellt man alle diese Dokumente als Knoten dar und fasst man die Hyperlinks als eine Verbindung zwischen diesen Dokumenten (Knoten) auf, so entsteht das Bild eines Netzes ( Web ). Da es Webserver auf der ganzen Welt umspannt, wird vom World Wide Web gesprochen. Das WWW ist also ein \u00fcber das Internet aufrufbares Hypertext-System aus lauter Webseiten. Heute spricht man eher von Hypermedien als von Hypertexten. Es ist eines von vielen Diensten des Internets.","title":"World Wide Web (WWW)"},{"location":"einfuehrung/#tim-berners-lee","text":"Es ist beeindruckend, wie viele der Webtechnologien erstmalig von Tim Berners Lee umgesetzt wurden. Er entwickelte HTML HTTP URL den ersten Webbrowser ( WorldWideWeb ) und den ersten Webserver ( CERN httpd ) Keine dieser Entwicklungen wurden patentiert und konnten somit kostenfrei von allen genutzt werden, was der schnellen Verbreitung dieser Technologien diente. 1994 gr\u00fcndete er das World Wide Web Consortium (W3C), welches sich um die Standadisierung dieser und weiterer Webtechnologien k\u00fcmmert, siehe w3.org .","title":"Tim Berners Lee"},{"location":"tools/","text":"Werkzeuge \u00b6 Integrated Development Environment (IDE) \u00b6 F\u00fcr die Webentwicklung stehen Ihnen viele gute Entwicklungswerkzeuge zur Verf\u00fcgung. F\u00fcr welches Sie sich entscheiden, bleibt Ihnen \u00fcberlassen. Hier eine Auswahl der aus meiner Sicht besten Entwicklungswerkzeuge: IntelliJ IDEA PhpStorm WebStorm Sublime Text Atom Visual Studio Code F\u00fcr die Tools von Jetbrains ben\u00f6tigen Sie einen Account. Mit Ihrer HTW-E-Mail-Adresse bekommen Sie aber eine kostenlose Hochschullizenz und k\u00f6nnen so die Enterprise-Versionen kostenlos nutzen. Sublime Text ist Shareware und fragt regelm\u00e4\u00dfig, ob Sie spenden m\u00f6chten. Ich werde in den Vorlesungen und \u00dcbungen Visual Studio Code verwenden. Visual Studio Code ist auch auf den Laborrechnern verf\u00fcgbar. Git \u00b6 Git ist ein Werkzeug zur Versionskontrolle und zum gemeinsamen Entwickeln in Teams. Nach jeder \u00dcbung committen Sie Ihre L\u00f6sung und pushen Sie auf einen zentralen, netzbasierten Dienst, wie z.B. GitHub GitLab Bibucket Gew\u00e4hren Sie mir Zugriff auf Ihr zentrales Repository. Auf GitHub finden Sie mich unter jfreiheit bzw. meiner E-Mail-Adresse joern.freiheit@htw-berlin.de . Repository initial anlegen \u00b6 Wir zeigen das Erstellen eines Repositories exemplarisch f\u00fcr GitHub . Die Beispiele hier sind f\u00fcr das Jahr 2020, funktionieren aber noch genau so. Ersetzen Sie einfach 20 durch 22 . Option A: Repository zun\u00e4chst in Github anlegen, dann clonen \u00b6 Als erstes loggen Sie sich in Github ein. Dort gibt es in der linken oberen Ecke einen Button New , siehe Bild: Klicken Sie darauf und geben Sie die notwendigen Informationen ein (Beschreibung ist optional): Sie k\u00f6nnen w\u00e4hlen, ob das Repository Public (f\u00fcr alle lesbar) oder Private (nur f\u00fcr Eingeladene lesbar) sein soll. Klicken Sie auf den Button Create repository . Kopieren Sie sich nun den Remote-Pfad in Ihre Zwischenablage, hier https://github.com/jfreiheit/Webtech20.git . Wechseln Sie nun lokal in Ihr Terminal und wechseln in Ihren Workspace Ihrer IDE. Ich w\u00e4hle hier den Pfad /Users/jornfreiheit/Sites , da dieser Pfad gleichzeitig mein DocumentRoot ist, d.h., wenn ich localhost im Browser aufrufe, dann wird in diesem Pfad nach den Webseiten \"gesucht\". jornfreiheit@Jorns-MacBook-Pro Sites % pwd /Users/jornfreiheit/Sites Geben Sie dort nun ein: jornfreiheit@Jorns-MacBook-Pro Sites % git clone https://github.com/jfreiheit/Webtech20.git Cloning into 'Webtech20' ... warning: You appear to have cloned an empty repository. also git clone gefolgt von dem Remote-Pfad aus Ihrer Zwischenablage. Wenn Sie in Github weder README.md noch .gitignore ausgew\u00e4hlt hatten, dann erhalten Sie eine Warnung, dass Sie ein leeres Repository clonen. Das ist aber kein Problem. Sie k\u00f6nnen aber auch beide Datein in Ihr Repository integrieren, die .gitignore verwenden wir auf jeden Fall. In dem Ordner, in den Sie geclont haben, wird nun ein Ordner Webtech20 angelegt. Diesen Ordner k\u00f6nnen Sie nun als Workspace Ihrer IDE verwenden. Also z.B. mit IntelliJ IDEA : \u00f6ffnen Sie das Projekt ( Open or import ) Webtech20 . Es erscheint: Hier k\u00f6nnen Sie w\u00e4hlen, dass neue Dateien immer automatisch zum Git-Repoitory hinzugef\u00fcgt werden - das k\u00f6nnen Sie aber auch immer manuell machen ( git add . ). Angenommen, wir erstellen uns jetzt eine Datei index.html ( File --> New --> HTML File ) mit: index.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > Erster Test </ title > </ head > < body > < h1 > Willkommen </ h1 > < p > Das ist die Datei index.html. Sie liegt bei mir unter /Users/jornfreiheit/Sites/Webtech20. Der Ordner /Users/jornfreiheit/Sites ist mein DocumentRoot, deshalb kann ich diese Datei im Browser unter localhost/Webtech20/index.html aufrufen. Der Ordner Webtech20 wird von Git verwaltet. </ p > </ body > </ html > Da der Ordner Sites bei mir DocumentRoot ist und sich der Webtech20 -Ordner (in dem die neue index.html ist) direkt darunter befindet, kann ich mir die Datei im Browser unter localhost/Webtech20/index.html anzeigen lassen. Das nat nichts mit Git zu tun, sondern mit dem DocumentRoot des lokalen Webservers. Wir f\u00fcgen im Terminal im Webtech20 -Ordner diese Datei dem Git-Repoitory hinzu (falls noch nicht automatisch durch unsere IDE passiert): jornfreiheit@Jorns-MacBook-Pro Webtech20 % git add index.html jornfreiheit@Jorns-MacBook-Pro Webtech20 % git status On branch master No commits yet Changes to be committed: ( use \"git rm --cached <file>...\" to unstage ) new file: .idea/.gitignore new file: .idea/Webtech20.iml new file: .idea/misc.xml new file: .idea/modules.xml new file: .idea/vcs.xml new file: index.html jornfreiheit@Jorns-MacBook-Pro Webtech20 % Au\u00dferdem sollten wir den .idea -Ordner von der Git-Verwaltung ausschlie\u00dfen. Dazu erstellen wir im Webtech20 -Ordner eine Datei .gitignore , falls diese noch nicht existiert und tragen dort .idea ein. F\u00fcgen Sie die Datei .gitignore Ihrem repository hinzu, f\u00fchren Sie Ihr erstes Commit aus und pushen Ihr Repository nach Github: git add .ignore git commit -m \"erstes commit\" git push In Github erkenn Sie, dass commit und push geklappt haben: In Zukunft f\u00fcgen Sie Ihre neu erstellten Dateien und Ordner immer mit git add . hinzu, erstellen neue Commits mit git commit -m \"Commit-Nachricht\" und pushen dann nach Github mit git push . Option B: Repository in Github anlegen und lokal anlegen, dann verbinden \u00b6 Legen Sie sich wie oben beschrieben ein Repository unter GitHub an. Kopieren Sie die Remote-URL (z.B. https://github.com/jfreiheit/Webtech20.git ). Erstellen Sie sich lokal einen Ordner (am besten in Ihrem DocumentRoot ), z.B. Webtech20 ( mkdir Webtech20 ). Wechseln Sie in diesen Ordner ( cd Webtech20 ) und f\u00fchren Sie dort git init aus. Es entsteht ein .git -Ordner. F\u00fcgen Sie diesem lokalen Repository alle Ihre bisher in Webtech20 erstellten Dateien mit git add . hinzu. Erstellen Sie ein Commit, z.B. git commit -m \"initial commit\" . Verbinden Sie Ihr lokales Repository mit dem remote-Repository auf Github durch git remote add origin https://github.com/jfreiheit/Webtech20.git (f\u00fcr https://... setzen Sie Ihre Remote-URL ein). Pushen Sie die Dateien auf Ihr remote-Repository: git push --set-upstream origin master . In Zukunft f\u00fcgen Sie Ihre neu erstellten Dateien und Ordner immer mit git add . hinzu, erstellen neue Commits mit git commit -m \"Commit-Nachricht\" und pushen dann nach Github mit git push . Webserver \u00b6 F\u00fcr das Modul ben\u00f6tigen wir einen Webserver. Wir verwenden den Apache Webserver . Auf dem Mac ist er bereits vorhanden, auf Linux-Systemen meistens auch. F\u00fcr Windows-Systeme wird die Installation von XAMPP empfohlen. Hier finden Sie Anleitungen zur Einrichtung des Webservers: Windows: https://www.ionos.de/digitalguide/server/tools/xampp-tutorial-so-erstellen-sie-ihren-lokalen-testserver/ https://werner-zenk.de/tipps/lokale_webserver_xampp.php Wichtig ist, dass Sie wissen, wo sich Ihr DocumentRoot befindet (zun\u00e4chst xampp\\htdocs - l\u00e4sst sich aber \u00e4ndern ) Mac: der Apache-Webserver ist bereits installiert achten Sie darauf, dass Sie Ihr DocumentRoot kennen (meistens Sites , eventuell \u00e4ndern ) Linux: die meisten Linux-Systeme haben bereits einen Webserver (auch hier wichtig, DocumentRoot zu kennen) wenn nicht, k\u00f6nnen Sie sich auch XAMPP installieren Um zu testen, ob Ihr Webser l\u00e4uft, erstellen Sie im DocumentRoot eine Datei index.php mit folgendem Inhalt: <?php phpinfo(); ?> und rufen in Ihrem Browser http://localhost/index.php auf. Es sollte eine \u00e4hnliche Ausgabe wie folgt erscheinen (nur Ausschnitt: Developer Tools \u00b6 Alle Browser sind mit Werkzeugen ausgestattet, die es Web-Entwicklerinnen erm\u00f6glichen, im Browser Informationen \u00fcber die Webanwendung zu erhalten. F\u00fcr einige Browser ist hier angegeben, wie Sie diese Entwicklerwerkzeuge einschalten. Chrome \u00b6 In Chrome sind die Entwicklerwerkzeuge unter dem Men\u00fc neben der URL-Eingabezeile unter Weitere Tools --> Entwicklertools verf\u00fcgbar (siehe folgendes Bild). Die eingeschalteten Entwicklertools offenbaren Ihnen umfassende Informationen \u00fcber die angezeigte Webseite. Besonders interessant ist der Reiter Console : oder auch der Reiter Elements , der Ihnen sowohl den HTML- als auch den jeweiligen CSS-Code anzeigt: Weiterf\u00fchrende Informationen erhalten Sie unter https://developers.google.com/web/tools/chrome-devtools . Firefox \u00b6 Zu den Entwicklertools von Firefox finden Sie Informationen auf https://developer.mozilla.org/de/docs/Tools Firefox Browser Developer Die Entwicklertools lassen sich in Firefox \u00f6ffnen unter Web-Entwickler --> Inspektor : Sie haben die gleichen M\u00f6glichkeiten der Ananlyse wie bei Chrome, bei Safari und anderen Browsern: Safari \u00b6 In Safari m\u00fcssen Sie zun\u00e4chst den Men\u00fceintrag Entwickler aktivieren. Eine Anleitung dazu finden Sie z.B. hier auf heise . Weitere Informationen zu den Entwicklertools erhalten Sie z.B. auf Werkzeuge im Men\u00fc \u201eEntwickler\u201c Safari Developer Help Web Development Tools Curl \u00b6 Curl ist ein Open-Source-Kommandozeilenprogramm, um Daten mittels URL zu transferieren. Curl kann auf der Kommandozeile genutzt werden, um SMTP, HTTP, FTP usw. zu verwenden. Wir werden Curl insbesondere f\u00fcr die HTTP-Anfragemethoden GET und POST verwenden. Eine ausf\u00fchrliche Beschreibung von Curl ist im Buch Everything curl - the book frei verf\u00fcgbar. Die Installation von Curl erfolgt \u00fcber die Curl Download Seite . Zum Testen, ob Curl korrekt funktioniert, k\u00f6nnen Sie im Terminal z.B. curl freiheit.f4.htw-berlin.de/curl.html eingeben. Es sollte folgende Ausgabe erscheinen: <!DOCTYPE html> <html> <head> <title>Curl-Test</title> </head> <body> <p>Hallo FIW!</p> </body> </html> Mit dem -o -Flag k\u00f6nnen Sie die Datei speichern (Sie k\u00f6nnen einen Dateinamen angeben - hier curl.html ): curl -o curl.html freiheit.f4.htw-berlin.de/curl.html Da oben die lokale Datei genau so hei\u00dft wie die remote-Datei, h\u00e4tte man auch curl -O freiheit.f4.htw-berlin.de/curl.html angeben k\u00f6nnen, also gro\u00dfes -O . Mit dem -d -Flag k\u00f6nnen Parameter \u00fcbergeben und die entsprechende Seite mit einer POST-Anfrage aufgerufen werden. Mit dem zus\u00e4tzlichen -G -Flag erfolgt die Anfrage nicht als POST sondern als GET. Mit dem -I -Flag fragen Sie den Header der Anfrage ab, z.B.: curl -I freiheit.f4.htw-berlin.de/curl.html gibt etwas aus in der Art: HTTP/1.1 200 OK Date: Thu, 04 Jun 2020 13 :59:43 GMT Server: Apache/2.4.38 ( Debian ) Last-Modified: Thu, 04 Jun 2020 13 :01:59 GMT ETag: \"78-5a741c004bdb9\" Accept-Ranges: bytes Content-Length: 120 Vary: Accept-Encoding Content-Type: text/html F\u00fcr eine vollst\u00e4ndige \u00dcbersicht aller Flags von Curl siehe Curl manpage . Postman \u00b6 Postman ist eine Anwendung, um Schnittstellen ( Application Programming Interface - API ), die das Backend bereitstellt, zu entwickeln und zu testen. Sie finden Postman unter postman.com . Wir beschr\u00e4nken uns zun\u00e4chst auf den Postman API Client . Laden Sie das Tool herunter und installieren es. Rufen Sie Postman auf und geben in das Eingabefeld https://postman-echo.com/get ein. Lassen Sie die Auswahl links daneben auf GET und klicken auf den Send -Button. Es erscheint folgendes Bild: Neben der GET -Anfrage sind folgende weitere Anfragen (siehe auch HTML \u2192 HTTP ) m\u00f6glich: POST - sendet Daten zur Verarbeitung an den Webserver PUT - l\u00e4dt existierende Daten (eine Datei) auf den Server PATCH - \u00e4ndert Daten (eine Datei), ohne - wie bei PUT - diese vollst\u00e4ndig zu ersetzen DELETE - l\u00f6scht die angegebenen Daten auf dem Server Node.js \u00b6 Node.js ist eine JavaScript-Laufzeitumgebung. Node.js reagiert auf Ereignisse und antwortet asynchron. Das bedeutet, dass die Ausf\u00fchrung einer Ereignisbearbeitung nicht zum Blockieren der Laufzeitumgebung f\u00fchrt, sondern nebenl\u00e4ufig weitere Ereignisse eintreffen k\u00f6nnen, die ebenfalls asynchron behandelt werden. Dies geschieht mithilfe des Callback-Patterns . Callbacks sind Funktionen, die anderen Funktionen als Parameter \u00fcbergeben werden (siehe JavaScript \u2192 Callback-Funktionen ). Angular \u00b6 Um Angular verwenden zu k\u00f6nnen (siehe auch Angular\u2192Getting started ), ben\u00f6tigen Sie das Angular Command Line Interface (CLI) . Zur Installation des Angular CLI geben Sie npm install -g @angular/cli ein. Den Paketmanager npm k\u00f6nnen Sie sich mit node.js installieren. Mithilfe des Angular CLI haben Sie dann die M\u00f6glichkeit, ein neues Projekt anzulegen ( ng new projektName ), eine neue Componente ( ng generate component componentenName ) usw. und das Projekt auszuf\u00fchren ( ng serve ). Sollten Sie bei der Installation der Angular-CLI EACCES errors erhalten ( permission denied ), dann arbeiten Sie an einem Mac ;-). Geben Sie dann im Terminal ein: sudo chown -R ` whoami ` ~/.npm sudo chown -R ` whoami ` /usr/local/lib/node_modules Danach sollte npm install -g @angular/cli funktionieren. Installationen \u00b6 Um den Paketmanager npm zu installieren, laden sie sich node.js hier herunter und installieren Sie es. Nach erfolgreicher Installation sollte sowohl node -v funktionieren und eine Versionsnummer ausgeben (z.B. v14.15.0 ) als auch npm -v (z.B. 6.14.8 ). Au\u00dferdem ben\u00f6tigen Sie das Angular-Command-Line-Interface (CLI) , das Sie mithilfe des Befehls npm install -g @angular/cli installieren. Danach sollte ng --version funktionieren und Ihnen etwas in dieser Art ausgeben: _ _ ____ _ ___ / \\ _ __ __ _ _ _ | | __ _ _ __ / ___ | | | _ _ | / \u25b3 \\ | '_ \\ / _` | | | | |/ _` | ' __ | | | | | | | / ___ \\| | | | ( _ | | | _ | | | ( _ | | | | | ___ | | ___ | | /_/ \\_\\_ | | _ | \\_ _, | \\_ _,_ | _ | \\_ _,_ | _ | \\_ ___ | _____ | ___ | | ___/ Angular CLI: 11 .0.1 Node: 14 .15.0 OS: darwin x64 Angular: ... Ivy Workspace: Package Version ------------------------------------------------------ @angular-devkit/architect 0 .1100.1 ( cli-only ) @angular-devkit/core 11 .0.1 ( cli-only ) @angular-devkit/schematics 11 .0.1 ( cli-only ) @schematics/angular 11 .0.1 ( cli-only ) @schematics/update 0 .1100.1 ( cli-only ) rxjs 6 .6.3 typescript 4 .0.5 Jetzt k\u00f6nnen wir unser erstes Angular-Projekt erstellen. Update @angular/cli \u00b6 Manchmal gibt es vielleicht Warnungen beim Erstellen eines Projektes - etwas in der Art, wie: npm WARN @angular-devkit/build-angular@0.1100.0 requires a peer of @angular/compiler-cli@^11.0.0 || ^11.0.0-next but none is installed. You must install peer dependencies yourself. npm WARN @angular-devkit/build-angular@0.1100.0 requires a peer of typescript@~4.0.0 but none is installed. You must install peer dependencies yourself. npm WARN @ngtools/webpack@11.0.0 requires a peer of @angular/compiler-cli@^11.0.0 || ^11.0.0-next but none is installed. You must install peer dependencies yourself. npm WARN @ngtools/webpack@11.0.0 requires a peer of typescript@~4.0.0 but none is installed. You must install peer dependencies yourself. npm WARN icss-utils@5.0.0 requires a peer of postcss@^8.1.0 but none is installed. You must install peer dependencies yourself. npm WARN postcss-modules-extract-imports@3.0.0 requires a peer of postcss@^8.1.0 but none is installed. You must install peer dependencies yourself. npm WARN postcss-modules-local-by-default@4.0.0 requires a peer of postcss@^8.1.0 but none is installed. You must install peer dependencies yourself. npm WARN postcss-modules-scope@3.0.0 requires a peer of postcss@^8.1.0 but none is installed. You must install peer dependencies yourself. npm WARN postcss-modules-values@4.0.0 requires a peer of postcss@^8.1.0 but none is installed. You must install peer dependencies yourself. Das liegt meistens daran, dass das Angular-CLI updated werden m\u00fcsste. F\u00fcr das Update von Angular gibt es eine eigene Seite . Gehen Sie wie dort beschrieben vor. MySQL \u00b6 MySQL ist eine relationale Datenbank und geh\u00f6rt zu den am meisten verwendeten relationalen Datenbanken bei Webanwendungen. Wir h\u00e4tten uns auch f\u00fcr PostgreSQL entscheiden k\u00f6nnen. F\u00fcr einen kurzen Vergleich von MySQL und PostgreSQL siehe hier . Informationen zur Installation von MySQL finden Sie hier . Nach der Installation finden Sie z.B. auf dem Mac unter Systemeinstellungen \u2192 MySQL : Achten Sie bei der Installation von MySQL darauf, dass Sie als Authentifizierungsmethode \"Legacy Password ...\" w\u00e4hlen! Sie m\u00fcssen aber MySQL auch nicht lokal installieren, sondern k\u00f6nnen auch den Studi-Server studi.f4.htw-berlin.de verwenden. phpMyadmin \u00b6 phpMyadmin ist eine graphische Oberfl\u00e4che zur Verwaltung Ihrer MySQL -Datenbanken. Nach erfolgreicher Installation rufen Sie im Browser localhost/phpmyadmin auf und haben Zugriff auf Ihre Datenbanken bzw. k\u00f6nnen diese erstellen, \u00e4ndern und bef\u00fcllen. MongoDB \u00b6 [MongoDB] ist eine NoSQL ( not only SQL ) Datenbank. In einer MongoDB werden nicht Relationen, sondern (JavaScript-)Objekte gespeichert. Die CRUD -Operationen auf einer MongoDB sind z.B. hier erkl\u00e4rt. Die MongoDB kann lokal als MongoDB (Community Edition) installiert werden. Zur Installationsseite geht es hier . Nach der Installation muss MongoDB gestartet werden. Unter Mac (f\u00fcr MongoDB-Version 4.4) geht es z.B. so: brew services start mongodb-community@4.4 Um MongoDB zu stoppen, muss beim Mac brew services stop mongodb-community@4.4 eingegeben werden. Wenn Sie dann mongo ins Terminal eingeben, sollte etwas in dieser Art erscheinen: MongoDB shell version v4.4.5 connecting to: mongodb://127.0.0.1:27017/?compressors = disabled & gssapiServiceName = mongodb Implicit session: session { \"id\" : UUID ( \"0b972fa5-fad9-48bb-8a7f-c81cc0778620\" ) } MongoDB server version: 4 .4.5 Welcome to the MongoDB shell. For interactive help, type \"help\" . For more comprehensive documentation, see https://docs.mongodb.com/ Questions? Try the MongoDB Developer Community Forums https://community.mongodb.com --- The server generated these startup warnings when booting: 2021 -07-01T11:40:21.328+02:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted --- --- Enable MongoDB ' s free cloud-based monitoring service, which will then receive and display metrics about your deployment ( disk utilization, CPU, operation statistics, etc ) . The monitoring data will be available on a MongoDB website with a unique URL accessible to you and anyone you share the URL with. MongoDB may use this information to make product improvements and to suggest MongoDB products and deployment options to you. To enable free monitoring, run the following command: db.enableFreeMonitoring () To permanently disable this reminder, run the following command: db.disableFreeMonitoring () --- > Weitere Hilfen \u00b6 Prozesse und Ports \u00b6 Wenn Sie herausbekommen wollen, welche Ports bereits belegt sind und durch welchen Prozess, dann geben Sie im Terminal ein: lsof -i -P | grep -i LISTEN Eventuell m\u00fcssen Sie ein sudo voranstellen. Sie erhalten eine Ausgabe in der Form (variiert nat\u00fcrlich stark): rapportd 372 jornfreiheit 4u IPv4 0x5cee55fd054bd73 0t0 TCP *:57124 (LISTEN) rapportd 372 jornfreiheit 5u IPv6 0x5cee55fab8990c3 0t0 TCP *:57124 (LISTEN) phpstorm 456 jornfreiheit 55u IPv4 0x5cee55faabf19b3 0t0 TCP localhost:6942 (LISTEN) phpstorm 456 jornfreiheit 355u IPv4 0x5cee55fb7f034f3 0t0 TCP localhost:63342 (LISTEN) Dropbox 2638 jornfreiheit 129u IPv6 0x5cee55fb262a223 0t0 TCP *:17500 (LISTEN) Dropbox 2638 jornfreiheit 130u IPv4 0x5cee55fb25ea393 0t0 TCP *:17500 (LISTEN) Dropbox 2638 jornfreiheit 185u IPv4 0x5cee55fb7f00393 0t0 TCP localhost:17600 (LISTEN) Dropbox 2638 jornfreiheit 194u IPv4 0x5cee55fb9e31753 0t0 TCP localhost:17603 (LISTEN) node 9070 jornfreiheit 21u IPv6 0x5cee55fb5913843 0t0 TCP *:8080 (LISTEN) Python 9138 jornfreiheit 5u IPv4 0x5cee55fcfdf7753 0t0 TCP localhost:8000 (LISTEN) Wenn Sie nun z.B. einen bestimmten Prozess killen wollen, z.B. den Python-Prozess, der in localhost auf Port 8000 l\u00e4uft, dann geben Sie kill -9 9138 im Terminal ein. 9138 ist die PID des entsprechenden Prozesses.","title":"Werkzeuge"},{"location":"tools/#werkzeuge","text":"","title":"Werkzeuge"},{"location":"tools/#integrated-development-environment-ide","text":"F\u00fcr die Webentwicklung stehen Ihnen viele gute Entwicklungswerkzeuge zur Verf\u00fcgung. F\u00fcr welches Sie sich entscheiden, bleibt Ihnen \u00fcberlassen. Hier eine Auswahl der aus meiner Sicht besten Entwicklungswerkzeuge: IntelliJ IDEA PhpStorm WebStorm Sublime Text Atom Visual Studio Code F\u00fcr die Tools von Jetbrains ben\u00f6tigen Sie einen Account. Mit Ihrer HTW-E-Mail-Adresse bekommen Sie aber eine kostenlose Hochschullizenz und k\u00f6nnen so die Enterprise-Versionen kostenlos nutzen. Sublime Text ist Shareware und fragt regelm\u00e4\u00dfig, ob Sie spenden m\u00f6chten. Ich werde in den Vorlesungen und \u00dcbungen Visual Studio Code verwenden. Visual Studio Code ist auch auf den Laborrechnern verf\u00fcgbar.","title":"Integrated Development Environment (IDE)"},{"location":"tools/#git","text":"Git ist ein Werkzeug zur Versionskontrolle und zum gemeinsamen Entwickeln in Teams. Nach jeder \u00dcbung committen Sie Ihre L\u00f6sung und pushen Sie auf einen zentralen, netzbasierten Dienst, wie z.B. GitHub GitLab Bibucket Gew\u00e4hren Sie mir Zugriff auf Ihr zentrales Repository. Auf GitHub finden Sie mich unter jfreiheit bzw. meiner E-Mail-Adresse joern.freiheit@htw-berlin.de .","title":"Git"},{"location":"tools/#repository-initial-anlegen","text":"Wir zeigen das Erstellen eines Repositories exemplarisch f\u00fcr GitHub . Die Beispiele hier sind f\u00fcr das Jahr 2020, funktionieren aber noch genau so. Ersetzen Sie einfach 20 durch 22 .","title":"Repository initial anlegen"},{"location":"tools/#option-a-repository-zunachst-in-github-anlegen-dann-clonen","text":"Als erstes loggen Sie sich in Github ein. Dort gibt es in der linken oberen Ecke einen Button New , siehe Bild: Klicken Sie darauf und geben Sie die notwendigen Informationen ein (Beschreibung ist optional): Sie k\u00f6nnen w\u00e4hlen, ob das Repository Public (f\u00fcr alle lesbar) oder Private (nur f\u00fcr Eingeladene lesbar) sein soll. Klicken Sie auf den Button Create repository . Kopieren Sie sich nun den Remote-Pfad in Ihre Zwischenablage, hier https://github.com/jfreiheit/Webtech20.git . Wechseln Sie nun lokal in Ihr Terminal und wechseln in Ihren Workspace Ihrer IDE. Ich w\u00e4hle hier den Pfad /Users/jornfreiheit/Sites , da dieser Pfad gleichzeitig mein DocumentRoot ist, d.h., wenn ich localhost im Browser aufrufe, dann wird in diesem Pfad nach den Webseiten \"gesucht\". jornfreiheit@Jorns-MacBook-Pro Sites % pwd /Users/jornfreiheit/Sites Geben Sie dort nun ein: jornfreiheit@Jorns-MacBook-Pro Sites % git clone https://github.com/jfreiheit/Webtech20.git Cloning into 'Webtech20' ... warning: You appear to have cloned an empty repository. also git clone gefolgt von dem Remote-Pfad aus Ihrer Zwischenablage. Wenn Sie in Github weder README.md noch .gitignore ausgew\u00e4hlt hatten, dann erhalten Sie eine Warnung, dass Sie ein leeres Repository clonen. Das ist aber kein Problem. Sie k\u00f6nnen aber auch beide Datein in Ihr Repository integrieren, die .gitignore verwenden wir auf jeden Fall. In dem Ordner, in den Sie geclont haben, wird nun ein Ordner Webtech20 angelegt. Diesen Ordner k\u00f6nnen Sie nun als Workspace Ihrer IDE verwenden. Also z.B. mit IntelliJ IDEA : \u00f6ffnen Sie das Projekt ( Open or import ) Webtech20 . Es erscheint: Hier k\u00f6nnen Sie w\u00e4hlen, dass neue Dateien immer automatisch zum Git-Repoitory hinzugef\u00fcgt werden - das k\u00f6nnen Sie aber auch immer manuell machen ( git add . ). Angenommen, wir erstellen uns jetzt eine Datei index.html ( File --> New --> HTML File ) mit: index.html <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > Erster Test </ title > </ head > < body > < h1 > Willkommen </ h1 > < p > Das ist die Datei index.html. Sie liegt bei mir unter /Users/jornfreiheit/Sites/Webtech20. Der Ordner /Users/jornfreiheit/Sites ist mein DocumentRoot, deshalb kann ich diese Datei im Browser unter localhost/Webtech20/index.html aufrufen. Der Ordner Webtech20 wird von Git verwaltet. </ p > </ body > </ html > Da der Ordner Sites bei mir DocumentRoot ist und sich der Webtech20 -Ordner (in dem die neue index.html ist) direkt darunter befindet, kann ich mir die Datei im Browser unter localhost/Webtech20/index.html anzeigen lassen. Das nat nichts mit Git zu tun, sondern mit dem DocumentRoot des lokalen Webservers. Wir f\u00fcgen im Terminal im Webtech20 -Ordner diese Datei dem Git-Repoitory hinzu (falls noch nicht automatisch durch unsere IDE passiert): jornfreiheit@Jorns-MacBook-Pro Webtech20 % git add index.html jornfreiheit@Jorns-MacBook-Pro Webtech20 % git status On branch master No commits yet Changes to be committed: ( use \"git rm --cached <file>...\" to unstage ) new file: .idea/.gitignore new file: .idea/Webtech20.iml new file: .idea/misc.xml new file: .idea/modules.xml new file: .idea/vcs.xml new file: index.html jornfreiheit@Jorns-MacBook-Pro Webtech20 % Au\u00dferdem sollten wir den .idea -Ordner von der Git-Verwaltung ausschlie\u00dfen. Dazu erstellen wir im Webtech20 -Ordner eine Datei .gitignore , falls diese noch nicht existiert und tragen dort .idea ein. F\u00fcgen Sie die Datei .gitignore Ihrem repository hinzu, f\u00fchren Sie Ihr erstes Commit aus und pushen Ihr Repository nach Github: git add .ignore git commit -m \"erstes commit\" git push In Github erkenn Sie, dass commit und push geklappt haben: In Zukunft f\u00fcgen Sie Ihre neu erstellten Dateien und Ordner immer mit git add . hinzu, erstellen neue Commits mit git commit -m \"Commit-Nachricht\" und pushen dann nach Github mit git push .","title":"Option A: Repository zun\u00e4chst in Github anlegen, dann clonen"},{"location":"tools/#option-b-repository-in-github-anlegen-und-lokal-anlegen-dann-verbinden","text":"Legen Sie sich wie oben beschrieben ein Repository unter GitHub an. Kopieren Sie die Remote-URL (z.B. https://github.com/jfreiheit/Webtech20.git ). Erstellen Sie sich lokal einen Ordner (am besten in Ihrem DocumentRoot ), z.B. Webtech20 ( mkdir Webtech20 ). Wechseln Sie in diesen Ordner ( cd Webtech20 ) und f\u00fchren Sie dort git init aus. Es entsteht ein .git -Ordner. F\u00fcgen Sie diesem lokalen Repository alle Ihre bisher in Webtech20 erstellten Dateien mit git add . hinzu. Erstellen Sie ein Commit, z.B. git commit -m \"initial commit\" . Verbinden Sie Ihr lokales Repository mit dem remote-Repository auf Github durch git remote add origin https://github.com/jfreiheit/Webtech20.git (f\u00fcr https://... setzen Sie Ihre Remote-URL ein). Pushen Sie die Dateien auf Ihr remote-Repository: git push --set-upstream origin master . In Zukunft f\u00fcgen Sie Ihre neu erstellten Dateien und Ordner immer mit git add . hinzu, erstellen neue Commits mit git commit -m \"Commit-Nachricht\" und pushen dann nach Github mit git push .","title":"Option B: Repository in Github anlegen und lokal anlegen, dann verbinden"},{"location":"tools/#webserver","text":"F\u00fcr das Modul ben\u00f6tigen wir einen Webserver. Wir verwenden den Apache Webserver . Auf dem Mac ist er bereits vorhanden, auf Linux-Systemen meistens auch. F\u00fcr Windows-Systeme wird die Installation von XAMPP empfohlen. Hier finden Sie Anleitungen zur Einrichtung des Webservers: Windows: https://www.ionos.de/digitalguide/server/tools/xampp-tutorial-so-erstellen-sie-ihren-lokalen-testserver/ https://werner-zenk.de/tipps/lokale_webserver_xampp.php Wichtig ist, dass Sie wissen, wo sich Ihr DocumentRoot befindet (zun\u00e4chst xampp\\htdocs - l\u00e4sst sich aber \u00e4ndern ) Mac: der Apache-Webserver ist bereits installiert achten Sie darauf, dass Sie Ihr DocumentRoot kennen (meistens Sites , eventuell \u00e4ndern ) Linux: die meisten Linux-Systeme haben bereits einen Webserver (auch hier wichtig, DocumentRoot zu kennen) wenn nicht, k\u00f6nnen Sie sich auch XAMPP installieren Um zu testen, ob Ihr Webser l\u00e4uft, erstellen Sie im DocumentRoot eine Datei index.php mit folgendem Inhalt: <?php phpinfo(); ?> und rufen in Ihrem Browser http://localhost/index.php auf. Es sollte eine \u00e4hnliche Ausgabe wie folgt erscheinen (nur Ausschnitt:","title":"Webserver"},{"location":"tools/#developer-tools","text":"Alle Browser sind mit Werkzeugen ausgestattet, die es Web-Entwicklerinnen erm\u00f6glichen, im Browser Informationen \u00fcber die Webanwendung zu erhalten. F\u00fcr einige Browser ist hier angegeben, wie Sie diese Entwicklerwerkzeuge einschalten.","title":"Developer Tools"},{"location":"tools/#chrome","text":"In Chrome sind die Entwicklerwerkzeuge unter dem Men\u00fc neben der URL-Eingabezeile unter Weitere Tools --> Entwicklertools verf\u00fcgbar (siehe folgendes Bild). Die eingeschalteten Entwicklertools offenbaren Ihnen umfassende Informationen \u00fcber die angezeigte Webseite. Besonders interessant ist der Reiter Console : oder auch der Reiter Elements , der Ihnen sowohl den HTML- als auch den jeweiligen CSS-Code anzeigt: Weiterf\u00fchrende Informationen erhalten Sie unter https://developers.google.com/web/tools/chrome-devtools .","title":"Chrome"},{"location":"tools/#firefox","text":"Zu den Entwicklertools von Firefox finden Sie Informationen auf https://developer.mozilla.org/de/docs/Tools Firefox Browser Developer Die Entwicklertools lassen sich in Firefox \u00f6ffnen unter Web-Entwickler --> Inspektor : Sie haben die gleichen M\u00f6glichkeiten der Ananlyse wie bei Chrome, bei Safari und anderen Browsern:","title":"Firefox"},{"location":"tools/#safari","text":"In Safari m\u00fcssen Sie zun\u00e4chst den Men\u00fceintrag Entwickler aktivieren. Eine Anleitung dazu finden Sie z.B. hier auf heise . Weitere Informationen zu den Entwicklertools erhalten Sie z.B. auf Werkzeuge im Men\u00fc \u201eEntwickler\u201c Safari Developer Help Web Development Tools","title":"Safari"},{"location":"tools/#curl","text":"Curl ist ein Open-Source-Kommandozeilenprogramm, um Daten mittels URL zu transferieren. Curl kann auf der Kommandozeile genutzt werden, um SMTP, HTTP, FTP usw. zu verwenden. Wir werden Curl insbesondere f\u00fcr die HTTP-Anfragemethoden GET und POST verwenden. Eine ausf\u00fchrliche Beschreibung von Curl ist im Buch Everything curl - the book frei verf\u00fcgbar. Die Installation von Curl erfolgt \u00fcber die Curl Download Seite . Zum Testen, ob Curl korrekt funktioniert, k\u00f6nnen Sie im Terminal z.B. curl freiheit.f4.htw-berlin.de/curl.html eingeben. Es sollte folgende Ausgabe erscheinen: <!DOCTYPE html> <html> <head> <title>Curl-Test</title> </head> <body> <p>Hallo FIW!</p> </body> </html> Mit dem -o -Flag k\u00f6nnen Sie die Datei speichern (Sie k\u00f6nnen einen Dateinamen angeben - hier curl.html ): curl -o curl.html freiheit.f4.htw-berlin.de/curl.html Da oben die lokale Datei genau so hei\u00dft wie die remote-Datei, h\u00e4tte man auch curl -O freiheit.f4.htw-berlin.de/curl.html angeben k\u00f6nnen, also gro\u00dfes -O . Mit dem -d -Flag k\u00f6nnen Parameter \u00fcbergeben und die entsprechende Seite mit einer POST-Anfrage aufgerufen werden. Mit dem zus\u00e4tzlichen -G -Flag erfolgt die Anfrage nicht als POST sondern als GET. Mit dem -I -Flag fragen Sie den Header der Anfrage ab, z.B.: curl -I freiheit.f4.htw-berlin.de/curl.html gibt etwas aus in der Art: HTTP/1.1 200 OK Date: Thu, 04 Jun 2020 13 :59:43 GMT Server: Apache/2.4.38 ( Debian ) Last-Modified: Thu, 04 Jun 2020 13 :01:59 GMT ETag: \"78-5a741c004bdb9\" Accept-Ranges: bytes Content-Length: 120 Vary: Accept-Encoding Content-Type: text/html F\u00fcr eine vollst\u00e4ndige \u00dcbersicht aller Flags von Curl siehe Curl manpage .","title":"Curl"},{"location":"tools/#postman","text":"Postman ist eine Anwendung, um Schnittstellen ( Application Programming Interface - API ), die das Backend bereitstellt, zu entwickeln und zu testen. Sie finden Postman unter postman.com . Wir beschr\u00e4nken uns zun\u00e4chst auf den Postman API Client . Laden Sie das Tool herunter und installieren es. Rufen Sie Postman auf und geben in das Eingabefeld https://postman-echo.com/get ein. Lassen Sie die Auswahl links daneben auf GET und klicken auf den Send -Button. Es erscheint folgendes Bild: Neben der GET -Anfrage sind folgende weitere Anfragen (siehe auch HTML \u2192 HTTP ) m\u00f6glich: POST - sendet Daten zur Verarbeitung an den Webserver PUT - l\u00e4dt existierende Daten (eine Datei) auf den Server PATCH - \u00e4ndert Daten (eine Datei), ohne - wie bei PUT - diese vollst\u00e4ndig zu ersetzen DELETE - l\u00f6scht die angegebenen Daten auf dem Server","title":"Postman"},{"location":"tools/#nodejs","text":"Node.js ist eine JavaScript-Laufzeitumgebung. Node.js reagiert auf Ereignisse und antwortet asynchron. Das bedeutet, dass die Ausf\u00fchrung einer Ereignisbearbeitung nicht zum Blockieren der Laufzeitumgebung f\u00fchrt, sondern nebenl\u00e4ufig weitere Ereignisse eintreffen k\u00f6nnen, die ebenfalls asynchron behandelt werden. Dies geschieht mithilfe des Callback-Patterns . Callbacks sind Funktionen, die anderen Funktionen als Parameter \u00fcbergeben werden (siehe JavaScript \u2192 Callback-Funktionen ).","title":"Node.js"},{"location":"tools/#angular","text":"Um Angular verwenden zu k\u00f6nnen (siehe auch Angular\u2192Getting started ), ben\u00f6tigen Sie das Angular Command Line Interface (CLI) . Zur Installation des Angular CLI geben Sie npm install -g @angular/cli ein. Den Paketmanager npm k\u00f6nnen Sie sich mit node.js installieren. Mithilfe des Angular CLI haben Sie dann die M\u00f6glichkeit, ein neues Projekt anzulegen ( ng new projektName ), eine neue Componente ( ng generate component componentenName ) usw. und das Projekt auszuf\u00fchren ( ng serve ). Sollten Sie bei der Installation der Angular-CLI EACCES errors erhalten ( permission denied ), dann arbeiten Sie an einem Mac ;-). Geben Sie dann im Terminal ein: sudo chown -R ` whoami ` ~/.npm sudo chown -R ` whoami ` /usr/local/lib/node_modules Danach sollte npm install -g @angular/cli funktionieren.","title":"Angular"},{"location":"tools/#installationen","text":"Um den Paketmanager npm zu installieren, laden sie sich node.js hier herunter und installieren Sie es. Nach erfolgreicher Installation sollte sowohl node -v funktionieren und eine Versionsnummer ausgeben (z.B. v14.15.0 ) als auch npm -v (z.B. 6.14.8 ). Au\u00dferdem ben\u00f6tigen Sie das Angular-Command-Line-Interface (CLI) , das Sie mithilfe des Befehls npm install -g @angular/cli installieren. Danach sollte ng --version funktionieren und Ihnen etwas in dieser Art ausgeben: _ _ ____ _ ___ / \\ _ __ __ _ _ _ | | __ _ _ __ / ___ | | | _ _ | / \u25b3 \\ | '_ \\ / _` | | | | |/ _` | ' __ | | | | | | | / ___ \\| | | | ( _ | | | _ | | | ( _ | | | | | ___ | | ___ | | /_/ \\_\\_ | | _ | \\_ _, | \\_ _,_ | _ | \\_ _,_ | _ | \\_ ___ | _____ | ___ | | ___/ Angular CLI: 11 .0.1 Node: 14 .15.0 OS: darwin x64 Angular: ... Ivy Workspace: Package Version ------------------------------------------------------ @angular-devkit/architect 0 .1100.1 ( cli-only ) @angular-devkit/core 11 .0.1 ( cli-only ) @angular-devkit/schematics 11 .0.1 ( cli-only ) @schematics/angular 11 .0.1 ( cli-only ) @schematics/update 0 .1100.1 ( cli-only ) rxjs 6 .6.3 typescript 4 .0.5 Jetzt k\u00f6nnen wir unser erstes Angular-Projekt erstellen.","title":"Installationen"},{"location":"tools/#update-angularcli","text":"Manchmal gibt es vielleicht Warnungen beim Erstellen eines Projektes - etwas in der Art, wie: npm WARN @angular-devkit/build-angular@0.1100.0 requires a peer of @angular/compiler-cli@^11.0.0 || ^11.0.0-next but none is installed. You must install peer dependencies yourself. npm WARN @angular-devkit/build-angular@0.1100.0 requires a peer of typescript@~4.0.0 but none is installed. You must install peer dependencies yourself. npm WARN @ngtools/webpack@11.0.0 requires a peer of @angular/compiler-cli@^11.0.0 || ^11.0.0-next but none is installed. You must install peer dependencies yourself. npm WARN @ngtools/webpack@11.0.0 requires a peer of typescript@~4.0.0 but none is installed. You must install peer dependencies yourself. npm WARN icss-utils@5.0.0 requires a peer of postcss@^8.1.0 but none is installed. You must install peer dependencies yourself. npm WARN postcss-modules-extract-imports@3.0.0 requires a peer of postcss@^8.1.0 but none is installed. You must install peer dependencies yourself. npm WARN postcss-modules-local-by-default@4.0.0 requires a peer of postcss@^8.1.0 but none is installed. You must install peer dependencies yourself. npm WARN postcss-modules-scope@3.0.0 requires a peer of postcss@^8.1.0 but none is installed. You must install peer dependencies yourself. npm WARN postcss-modules-values@4.0.0 requires a peer of postcss@^8.1.0 but none is installed. You must install peer dependencies yourself. Das liegt meistens daran, dass das Angular-CLI updated werden m\u00fcsste. F\u00fcr das Update von Angular gibt es eine eigene Seite . Gehen Sie wie dort beschrieben vor.","title":"Update @angular/cli"},{"location":"tools/#mysql","text":"MySQL ist eine relationale Datenbank und geh\u00f6rt zu den am meisten verwendeten relationalen Datenbanken bei Webanwendungen. Wir h\u00e4tten uns auch f\u00fcr PostgreSQL entscheiden k\u00f6nnen. F\u00fcr einen kurzen Vergleich von MySQL und PostgreSQL siehe hier . Informationen zur Installation von MySQL finden Sie hier . Nach der Installation finden Sie z.B. auf dem Mac unter Systemeinstellungen \u2192 MySQL : Achten Sie bei der Installation von MySQL darauf, dass Sie als Authentifizierungsmethode \"Legacy Password ...\" w\u00e4hlen! Sie m\u00fcssen aber MySQL auch nicht lokal installieren, sondern k\u00f6nnen auch den Studi-Server studi.f4.htw-berlin.de verwenden.","title":"MySQL"},{"location":"tools/#phpmyadmin","text":"phpMyadmin ist eine graphische Oberfl\u00e4che zur Verwaltung Ihrer MySQL -Datenbanken. Nach erfolgreicher Installation rufen Sie im Browser localhost/phpmyadmin auf und haben Zugriff auf Ihre Datenbanken bzw. k\u00f6nnen diese erstellen, \u00e4ndern und bef\u00fcllen.","title":"phpMyadmin"},{"location":"tools/#mongodb","text":"[MongoDB] ist eine NoSQL ( not only SQL ) Datenbank. In einer MongoDB werden nicht Relationen, sondern (JavaScript-)Objekte gespeichert. Die CRUD -Operationen auf einer MongoDB sind z.B. hier erkl\u00e4rt. Die MongoDB kann lokal als MongoDB (Community Edition) installiert werden. Zur Installationsseite geht es hier . Nach der Installation muss MongoDB gestartet werden. Unter Mac (f\u00fcr MongoDB-Version 4.4) geht es z.B. so: brew services start mongodb-community@4.4 Um MongoDB zu stoppen, muss beim Mac brew services stop mongodb-community@4.4 eingegeben werden. Wenn Sie dann mongo ins Terminal eingeben, sollte etwas in dieser Art erscheinen: MongoDB shell version v4.4.5 connecting to: mongodb://127.0.0.1:27017/?compressors = disabled & gssapiServiceName = mongodb Implicit session: session { \"id\" : UUID ( \"0b972fa5-fad9-48bb-8a7f-c81cc0778620\" ) } MongoDB server version: 4 .4.5 Welcome to the MongoDB shell. For interactive help, type \"help\" . For more comprehensive documentation, see https://docs.mongodb.com/ Questions? Try the MongoDB Developer Community Forums https://community.mongodb.com --- The server generated these startup warnings when booting: 2021 -07-01T11:40:21.328+02:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted --- --- Enable MongoDB ' s free cloud-based monitoring service, which will then receive and display metrics about your deployment ( disk utilization, CPU, operation statistics, etc ) . The monitoring data will be available on a MongoDB website with a unique URL accessible to you and anyone you share the URL with. MongoDB may use this information to make product improvements and to suggest MongoDB products and deployment options to you. To enable free monitoring, run the following command: db.enableFreeMonitoring () To permanently disable this reminder, run the following command: db.disableFreeMonitoring () --- >","title":"MongoDB"},{"location":"tools/#weitere-hilfen","text":"","title":"Weitere Hilfen"},{"location":"tools/#prozesse-und-ports","text":"Wenn Sie herausbekommen wollen, welche Ports bereits belegt sind und durch welchen Prozess, dann geben Sie im Terminal ein: lsof -i -P | grep -i LISTEN Eventuell m\u00fcssen Sie ein sudo voranstellen. Sie erhalten eine Ausgabe in der Form (variiert nat\u00fcrlich stark): rapportd 372 jornfreiheit 4u IPv4 0x5cee55fd054bd73 0t0 TCP *:57124 (LISTEN) rapportd 372 jornfreiheit 5u IPv6 0x5cee55fab8990c3 0t0 TCP *:57124 (LISTEN) phpstorm 456 jornfreiheit 55u IPv4 0x5cee55faabf19b3 0t0 TCP localhost:6942 (LISTEN) phpstorm 456 jornfreiheit 355u IPv4 0x5cee55fb7f034f3 0t0 TCP localhost:63342 (LISTEN) Dropbox 2638 jornfreiheit 129u IPv6 0x5cee55fb262a223 0t0 TCP *:17500 (LISTEN) Dropbox 2638 jornfreiheit 130u IPv4 0x5cee55fb25ea393 0t0 TCP *:17500 (LISTEN) Dropbox 2638 jornfreiheit 185u IPv4 0x5cee55fb7f00393 0t0 TCP localhost:17600 (LISTEN) Dropbox 2638 jornfreiheit 194u IPv4 0x5cee55fb9e31753 0t0 TCP localhost:17603 (LISTEN) node 9070 jornfreiheit 21u IPv6 0x5cee55fb5913843 0t0 TCP *:8080 (LISTEN) Python 9138 jornfreiheit 5u IPv4 0x5cee55fcfdf7753 0t0 TCP localhost:8000 (LISTEN) Wenn Sie nun z.B. einen bestimmten Prozess killen wollen, z.B. den Python-Prozess, der in localhost auf Port 8000 l\u00e4uft, dann geben Sie kill -9 9138 im Terminal ein. 9138 ist die PID des entsprechenden Prozesses.","title":"Prozesse und Ports"},{"location":"uebungen/","text":"\u00dcbungen \u00b6 \u00dcbung 0 \u00b6 Infrastruktur einrichten w\u00e4hlen Sie eine IDE aus und installieren Sie diese richten Sie sich ein Git-Repository ein (z.B. WebTech22 ) und pushen Sie es auf einen zentralen Dienst ( siehe ) laden Sie mich zu Ihrem Git-Dienst ein ( siehe ) commiten und pushen Sie Ihr Repository","title":"\u00dcbungen"},{"location":"uebungen/#ubungen","text":"","title":"\u00dcbungen"},{"location":"uebungen/#ubung-0","text":"Infrastruktur einrichten w\u00e4hlen Sie eine IDE aus und installieren Sie diese richten Sie sich ein Git-Repository ein (z.B. WebTech22 ) und pushen Sie es auf einen zentralen Dienst ( siehe ) laden Sie mich zu Ihrem Git-Dienst ein ( siehe ) commiten und pushen Sie Ihr Repository","title":"\u00dcbung 0"}]}